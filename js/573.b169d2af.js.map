{"version":3,"file":"js/573.b169d2af.js","mappings":"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","sources":["webpack://novatool_claude/./node_modules/core-js/internals/to-string.js","webpack://novatool_claude/./node_modules/core-js/internals/validate-arguments-length.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://novatool_claude/./src/components/ImageMap.vue","webpack://novatool_claude/./src/components/ImageMap.vue?99e2"],"sourcesContent":["'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","<template>\n  \n  <div class=\"page-container\">\n    <div class=\"import-controls-container\">\n      <div class=\"controls-row\">\n        <div class=\"import-controls\">\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\".json,.h\" @change=\"importAreaInfo\" class=\"file-input\">\n            <span class=\"material-icons\">upload_file</span>\n            Import\n          </label>\n          <label class=\"import-btn\" v-if=\"imagePath\">\n            <input type=\"file\" \n              webkitdirectory \n              directory \n              @change=\"importImages\" \n              class=\"file-input\">\n            <span class=\"material-icons\">drive_folder_upload</span>\n            Load Images\n          </label>\n        </div>\n        <div class=\"image-selector\">\n          <!-- <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\"> -->\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\">\n            <span class=\"material-icons\">file_open</span>\n            Select BG\n          </label>\n          <!-- <button @click=\"triggerFileInput\" class=\"select-image-btn\">\n            Select Image\n          </button> -->\n          <label class=\"switch\" v-if=\"selectedImage\">\n            <span class=\"switch-label\">Edit Mode</span>\n            <input type=\"checkbox\" v-model=\"isEditing\">\n            <span class=\"slider round\"></span>        \n          </label>\n          \n        </div>\n      </div>\n    </div>\n    \n    <span class=\"file-info\" v-if=\"BGName\">\n      <span class=\"material-icons\">description</span>\n      {{ BGName }}\n    </span>\n    <p> </p>\n    <div class=\"image-section\" v-if=\"BGName\">\n      <div class=\"image-container\">          \n        \n        <div v-if=\"selectedImage\" class=\"image-display\">\n          <img \n            :src=\"selectedImage\" \n            useMap=\"#workMap\" \n            class=\"image-map\"\n            @load=\"initializeCanvas\"\n            @click=\"handleImageClick\"\n            @mousedown.prevent=\"startDrawing\"\n            @mousemove.prevent=\"drawing\"\n            @mouseup.prevent=\"endDrawing\"\n            draggable=\"false\"\n          >\n          <map name=\"workMap\" v-if=\"!isEditing\">\n            <area v-for=\"area in areas\"\n                  :key=\"area.id\"\n                  :shape=\"area.shape\"\n                  :coords=\"area.coords\"\n                  :href=\"area.href\"\n                  :alt=\"area.alt\"\n                  @click.prevent\n                  @mouseover=\"highlightArea(area.id)\"\n                  @mouseout=\"removeHighlight()\">\n          </map>\n\n          <!-- 영역 배경 이미지 추가 -->\n          <div v-for=\"area in areas\" \n              :key=\"'bg-'+area.id\" \n              class=\"area-background\"\n              v-show=\"area.visible && area.imageUrl\"\n              :style=\"getAreaBackgroundStyle(area)\">\n            <img v-if=\"area.imageUrl\" :src=\"area.imageUrl\" alt=\"Area background\">\n          </div>\n\n          <canvas \n            ref=\"highlightCanvas\" \n            class=\"highlight-canvas\"\n            @click=\"handleCanvasClick($event)\"\n            :style=\"{ cursor: isEditing ? 'pointer' : 'default' }\">\n          </canvas>\n          \n          <!-- Area Numbers -->\n          <div v-for=\"area in areas\" \n              :key=\"area.id\" \n              class=\"area-number\"\n              :class=\"{ 'selected': selectedAreaId === area.id }\"\n              \n              :style=\"getAreaNumberStyle(area)\">\n            {{ area.id }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Modern Table for Area Coordinates -->\n      <div v-if=\"areas.length > 0\" class=\"area-table-container\">\n        <h3>Area Info</h3>\n        <div class=\"import-controls\">\n          <div class=\"image-path-input\">\n            <input \n              type=\"text\" \n              id=\"imagePath\" \n              v-model=\"imagePath\" \n              placeholder=\"Enter image path\"\n              class=\"path-input\"\n            >\n          </div>\n          \n        </div>\n\n        <table class=\"modern-table\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>X</th>\n              <th>Y</th>\n              <th>Width</th>\n              <th>Height</th>\n              <th>Image</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"area in areas\" :key=\"area.id\" :class=\"{ 'editing-row': isEditingArea(area.id) }\">\n              <td class=\"area-id\">{{ area.id }}</td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).x\"                \n                  @input=\"updateCoord(area.id, 'x', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).y\"\n                  @input=\"updateCoord(area.id, 'y', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).width\"\n                  @input=\"updateCoord(area.id, 'width', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its width' : ''\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).height\"\n                  @input=\"updateCoord(area.id, 'height', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its height' : ''\"\n                >\n              </td>\n              <td>\n                <div class=\"file-upload-container\">\n                  <label class=\"custom-file-upload\" :title=\"'Select an image for ' + area.id\">\n                    <input \n                      type=\"file\" \n                      accept=\"image/*\"\n                      @change=\"handleAreaImageUpload($event, area.id)\"\n                      class=\"image-upload\"\n                    >\n                    <span class=\"material-icons\">image</span>\n                  </label>\n                  <span class=\"selected-filename\" v-if=\"areaFilenames[area.id]\">\n                    {{ areaFilenames[area.id] }}\n                  </span>\n                </div>\n                <!-- <img \n                  v-if=\"area.imageUrl\" \n                  :src=\"area.imageUrl\" \n                  class=\"area-thumbnail\"\n                  alt=\"Area image\"\n                > -->\n              </td>\n              <td class=\"actions-cell\">\n                <button @click=\"toggleVisibility(area.id)\" class=\"action-btn visibility\" :title=\"area.visible ? 'Hide' : 'Show'\">\n                  <span class=\"material-icons\">{{ area.visible ? 'visibility' : 'visibility_off' }}</span>\n                </button>\n                <button @click=\"deleteArea(area.id)\" class=\"action-btn delete\" :title=\"'Remove area'\">\n                  <span class=\"material-icons\">clear</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p ></p>\n\n        <div class=\"export-buttons\">\n          <button @click=\"exportAsJson\" class=\"export-btn\">Save to JSON </button>\n          <button @click=\"exportAsCStruct\" class=\"export-btn\">Save to C Struct</button>\n        </div>\n      </div>\n\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageMap',\n  data() {\n    return {\n      selectedImage: null,\n      areas: [],\n      areaFilenames: {}, // 영역별 실제 파일명 저장\n      isEditing: true,\n      isDrawing: false,\n      startX: 0,\n      startY: 0,\n      currentArea: null,\n      editingAreaId: null,\n      isDragging: false,\n      selectedAreaId: null,\n      dragStartX: 0,\n      dragStartY: 0,\n      imagePath: '',\n      BGName: '',\n      BGSize: ''\n    }\n  },\n  methods: {\n    toggleVisibility(areaId) {\n      const area = this.areas.find(a => a.id === areaId);\n      if (area) {\n        area.visible = !area.visible;\n        this.drawSavedAreas();\n      }\n    },\n\n    handleCanvasClick(event) {\n      if (!this.isEditing) return;\n      \n      const rect = event.target.getBoundingClientRect();\n      const scale = event.target.width / event.target.clientWidth;\n      const x = (event.clientX - rect.left) * scale;\n      const y = (event.clientY - rect.top) * scale;\n\n      // 클릭한 위치에 있는 영역 찾기\n      const clickedArea = this.areas.find(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(Number);\n        return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n      });\n\n      if (clickedArea) {\n        this.selectedAreaId = clickedArea.id;\n        this.highlightArea(clickedArea.id);\n      } else {\n        this.selectedAreaId = null;\n        this.drawSavedAreas();\n      }\n    },\n    selectArea(areaId) {\n      this.selectedAreaId = areaId;\n    },\n    \n    // 이미지 클릭 시 선택 해제\n    handleImageClick(event) {\n      if (event.target.classList.contains('image-map')) {\n        this.selectedAreaId = null;\n      }\n    },\n\n    importImages(event) {\n      const files = Array.from(event.target.files);\n      \n      // Create a map of filenames to their data URLs\n      const imageMap = {};\n      \n      files.forEach(file => {\n        if (file.type.startsWith('image/')) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            imageMap[file.name] = e.target.result;\n            \n            // Set background image if filename matches\n            if (file.name === this.BGName) {\n              this.selectedImage = e.target.result;\n            }\n            \n            // Set area images if filename matches\n            this.areas.forEach(area => {\n              if (this.areaFilenames[area.id] === file.name) {\n                area.imageUrl = e.target.result;\n              }\n            });\n          };\n          reader.readAsDataURL(file);\n        }\n      });\n    },\n\n    importAreaInfo(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = async(e) => {\n        const content = e.target.result;\n        \n        if (file.name.endsWith('.json')) {\n          await this.importFromJson(content);\n        } else if (file.name.endsWith('.h')) {\n          await this.importFromCStruct(content);\n        }\n\n        \n      };\n      reader.readAsText(file);\n    },\n\n    clearAllAreas() {\n      this.areas = [];\n      this.areaFilenames = {}; // 관련 파일명 정보도 함께 지우기\n      //this.drawSavedAreas(); // 캔버스 다시 그리기\n    },\n\n    importFromJson(content) {\n      try {\n        const data = JSON.parse(content);\n\n        // Set image path if available\n        this.imagePath = data.imagePath || '';\n        this.BGName = data.BGName || '';\n\n        // Check if data is in the new format (with imagePath) or old format (just array of areas)\n        let areasData;\n\n        if (Array.isArray(data)) {\n          // Old format - direct array of areas\n          areasData = data;\n          this.imagePath = ''; // Reset image path\n        } else if (data && typeof data === 'object') {\n          // New format with imagePath\n          this.imagePath = data.imagePath || '';\n          \n          // Check if areas property exists and is an array\n          if (data.areas && Array.isArray(data.areas)) {\n            areasData = data.areas;\n          } else {\n            // Try to use the whole object as area data\n            areasData = [data];\n          }\n        } else {\n          throw new Error('Invalid JSON structure');\n        }\n\n        this.clearAllAreas();\n        \n        // Process the areas data\n        this.areas = areasData.map(item => {\n          // Make sure coordinates exist\n          if (!item.coordinates) {\n            console.error('Missing coordinates in area:', item);\n            return null;\n          }\n          \n          return {\n            id: item.id || 0,\n            shape: 'rect',\n            coords: `${item.coordinates.x},${item.coordinates.y},${item.coordinates.x + item.coordinates.width},${item.coordinates.y + item.coordinates.height}`,\n            href: '#',\n            alt: `Area ${item.id || 0}`,\n            imageUrl: null,\n            visible: item.visible !== undefined ? item.visible : true\n          };\n        }).filter(area => area !== null); // Remove any null entries\n        \n        // 파일명 정보 복원\n        this.areaFilenames = {};\n        areasData.forEach(item => {\n          if (item.id && item.filename) {\n            this.areaFilenames[item.id] = item.filename;\n          }\n        });\n\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage)\n           {\n            this.drawSavedAreas();\n          }\n        });\n        \n        //console.log('Successfully imported JSON data:', { areas: this.areas, imagePath: this.imagePath });\n      } catch (error) {\n        console.error('Error importing JSON:', error);\n        alert('The JSON file format is not correct:' + error.message);\n      }\n    },\n\n    importFromCStruct(content) {\n      try {\n        // Extract image path if available\n        const imagePathMatch = content.match(/#define IMAGE_PATH \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ Image Path: (.+)/);\n        if (imagePathMatch && imagePathMatch[1]) {\n          this.imagePath = imagePathMatch[1];\n        }\n\n        const BGNameMatch = content.match(/#define BGName \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ BG Name: (.+)/);\n        if (BGNameMatch && BGNameMatch[1]) {\n          this.BGName = BGNameMatch[1];\n        }\n\n        // C struct 파싱을 위한 정규식 수정\n        const areaRegex = /{\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*\"([^\"]*)\"\\s*,\\s*(\\d+)\\s*}/g;\n        //const areas = [];\n        let match;\n\n        this.clearAllAreas();\n\n        while ((match = areaRegex.exec(content)) !== null) {\n          const id = parseInt(match[1]);\n          const x = parseInt(match[2]);\n          const y = parseInt(match[3]);\n          const width = parseInt(match[4]);\n          const height = parseInt(match[5]);\n          const filename = match[6];\n          const visible = match[7] === \"1\"; // 1이면 true, 0이면 false\n          \n          this.areas.push({\n            id: id,\n            shape: 'rect',\n            coords: `${x},${y},${x + width},${y + height}`,\n            href: '#',\n            alt: `Area ${id}`,\n            imageUrl: null,\n            visible: visible\n          });          \n          \n          // 파일명 정보 저장\n          if (filename) {\n            this.areaFilenames[id] = filename;\n          }\n\n          console.log('Imported area:', { id, x, y, width, height, filename, visible });\n        }\n\n        // 영역이 하나도 매칭되지 않았을 경우 로그 출력\n        if (this.areas.length === 0) {\n          console.error('No areas found in the C struct file. Content:', content);\n          alert('No valid areas found in the C struct file.');\n          return;\n        }\n\n        // 캔버스가 준비되었을 때만 drawSavedAreas 호출\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage) {\n            this.drawSavedAreas();\n          }\n        });\n        console.log('Successfully imported C struct data:', this.areas);\n      } catch (error) {\n        console.error('Error importing C struct:', error);\n        alert('The C Struct file format is not correct: ' + error.message);\n      }\n    },\n    \n    exportAsJson() {      \n      const exportData = {\n        imagePath: this.imagePath,\n        BGName: this.BGName,\n          areas: this.areas.map(area => ({\n          id: area.id,\n          coordinates: this.getAreaCoords(area),\n          filename: this.areaFilenames[area.id] || '',\n          visible: area.visible\n        }))\n      };\n            \n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      this.downloadFile(blob, 'image_map_areas.json');\n    },\n  \n    exportAsCStruct() {\n      let structContent = '// Image Path: ' + this.imagePath + '\\n';\n      structContent += '// BG Name: ' + this.BGName + '\\n\\n';\n      structContent += 'typedef struct {\\n';\n      structContent += '    int id;\\n';\n      structContent += '    int x;\\n';\n      structContent += '    int y;\\n';\n      structContent += '    int width;\\n';\n      structContent += '    int height;\\n';\n      structContent += '    char filename[256];\\n';\n      structContent += '    int visible;\\n';\n      structContent += '} Area;\\n\\n';\n      \n      structContent += '#define IMAGE_PATH \"' + this.imagePath + '\"\\n';\n      structContent += '#define BGName \"' + this.BGName + '\"\\n\\n';\n      structContent += 'Area areas[] = {\\n';\n      this.areas.forEach(area => {\n        const coords = this.getAreaCoords(area);\n        const filename = this.areaFilenames[area.id] || '';\n        structContent += `    {${area.id}, ${coords.x}, ${coords.y}, ${coords.width}, ${coords.height}, \"${filename}\", ${area.visible ? 1 : 0}},\\n`;\n      });\n      structContent += '};\\n';\n      \n      const blob = new Blob([structContent], { type: 'text/plain' });\n      this.downloadFile(blob, 'image_map_areas.h');\n    },\n    \n    downloadFile(blob, filename) {\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n\n    getAreaBackgroundStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        position: 'absolute',\n        left: `${coords.x}px`,\n        top: `${coords.y}px`,\n        width: `${coords.width}px`,\n        height: `${coords.height}px`,\n        overflow: 'hidden'\n      }\n    },\n\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n\n    formatFileSize(bytes){\n      const units = ['B', 'KB', 'MB', 'GB']\n      let size = bytes\n      let unitIndex = 0\n      \n      while (size >= 1024 && unitIndex < units.length - 1) {\n        size /= 1024\n        unitIndex++\n      }\n      \n      return `${size.toFixed(1)} ${units[unitIndex]}`\n    },\n\n    handleImageUpload(event) {\n      const file = event.target.files[0]\n      if (file && file.type.startsWith('image/')) {\n        //console.log('file path : %s', file.name)\n        this.BGName = file.name\n        this.BGSize = this.formatFileSize(file.size)\n\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          this.selectedImage = e.target.result\n          this.$emit('image-selected', file)\n        }\n        reader.readAsDataURL(file)\n        this.isEditing = true\n      }\n    },\n    toggleEditMode() {\n      this.isEditing = !this.isEditing\n    },\n    drawSavedAreas() {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.areas.forEach(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n        const width = x2 - x1\n        const height = y2 - y1\n        \n        // 흰색 테두리\n        ctx.strokeStyle = 'white'\n        ctx.lineWidth = 2\n        ctx.setLineDash([])\n        ctx.strokeRect(x1, y1, width, height)\n        \n        // 검은색 점선 테두리\n        ctx.strokeStyle = 'black'\n        ctx.lineWidth = 1\n        ctx.setLineDash([4, 4])\n        ctx.strokeRect(x1, y1, width, height)\n      })\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    startDrawing(event) {\n      if (!this.isEditing) return\n      \n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      this.startX = Math.round((event.clientX - rect.left) * scale)\n      this.startY = Math.round((event.clientY - rect.top) * scale)\n      this.isDrawing = true\n      \n      this.currentArea = {\n        startX: this.startX,\n        startY: this.startY\n      }\n    },\n    drawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const currentX = Math.round((event.clientX - rect.left) * scale)\n      const currentY = Math.round((event.clientY - rect.top) * scale)\n\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.drawSavedAreas()\n      \n      const width = currentX - this.currentArea.startX\n      const height = currentY - this.currentArea.startY\n      \n      // ctx.fillStyle = 'rgba(0, 0, 0, 0.3)'\n      // ctx.fillRect(\n      //   this.currentArea.startX,\n      //   this.currentArea.startY,\n      //   width,\n      //   height\n      // )\n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'\n      ctx.fillRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n  \n      // 이중 테두리 그리기 (흰색과 검은색)\n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      \n      // 검은색 테두리 (점선)\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    handleAreaImageUpload(event, areaId) {\n      const file = event.target.files[0]\n      if (file && file.type.startsWith('image/')) {\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          const area = this.areas.find(a => a.id === areaId)\n          // 이미지 로드 후 원본 크기 가져오기\n          const img = new Image()\n          img.onload = () => {\n            const coords = this.getAreaCoords(area)\n            area.imageUrl = e.target.result\n            area.coords = `${coords.x},${coords.y},${coords.x + img.width},${coords.y + img.height}`\n            this.areaFilenames[areaId] = file.name // 실제 파일명 저장\n            \n            this.drawSavedAreas()\n          }\n          img.src = e.target.result\n        }\n        reader.readAsDataURL(file)\n      }\n    },\n    endDrawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const endX = Math.round((event.clientX - rect.left) * scale)\n      const endY = Math.round((event.clientY - rect.top) * scale)\n\n      if (Math.abs(endX - this.currentArea.startX) < 10 || \n          Math.abs(endY - this.currentArea.startY) < 10) {\n        this.isDrawing = false\n        this.drawSavedAreas()\n        return\n      }\n\n      const newArea = {\n        id: this.areas.length + 1,\n        shape: 'rect',\n        coords: `${this.currentArea.startX},${this.currentArea.startY},${endX},${endY}`,\n        href: '#',\n        alt: `Area ${this.areas.length + 1}`,\n        imageUrl: null, // 이미지 URL 속성 추가\n        visible: true\n      }\n\n      this.areas.push(newArea)\n      this.isDrawing = false\n      this.drawSavedAreas()\n    },\n\n    highlightArea(areaId) {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      \n      this.drawSavedAreas()\n      \n      const area = this.areas.find(a => a.id === areaId)\n      const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n      const width = x2 - x1\n      const height = y2 - y1\n      \n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(0, 255, 0, 0.3)'\n      ctx.fillRect(x1, y1, width, height)\n      \n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.setLineDash([])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      // 검은색 점선 테두리\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n\n    removeHighlight() {\n      this.drawSavedAreas()\n    },\n\n    initializeCanvas() {\n      const img = event.target\n      const canvas = this.$refs.highlightCanvas\n      canvas.width = img.width\n      canvas.height = img.height\n      this.drawSavedAreas()\n    },\n    getAreaCoords(area) {\n      const [x1, y1, x2, y2] = area.coords.split(',').map(Number)\n      return {\n        x: Math.min(x1, x2),\n        y: Math.min(y1, y2),\n        width: Math.abs(x2 - x1),\n        height: Math.abs(y2 - y1)\n      }\n    },\n    getAreaNumberStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        left: `${coords.x}px`,\n        top: `${coords.y}px`\n      }\n    },\n    deleteArea(areaId) {\n      this.areas = this.areas.filter(area => area.id !== areaId)\n      this.drawSavedAreas()\n    },\n    toggleEdit(areaId) {\n      this.editingAreaId = this.editingAreaId === areaId ? null : areaId\n    },\n    isEditingArea(areaId) {\n      return this.editingAreaId === areaId\n    },\n\n    updateCoord(areaId, type, value) {\n        const area = this.areas.find(a => a.id === areaId)\n        const coords = this.getAreaCoords(area)\n        \n        // 입력값이 숫자가 아니거나 음수인 경우 0으로 처리\n        value = (!value || isNaN(value) || value < 0) ? 0 : parseInt(value)\n        \n        switch(type) {\n        case 'x':\n            area.coords = `${value},${coords.y},${value + coords.width},${coords.y + coords.height}`\n            break\n        case 'y':\n            area.coords = `${coords.x},${value},${coords.x + coords.width},${value + coords.height}`\n            break\n        case 'width':\n            area.coords = `${coords.x},${coords.y},${coords.x + value},${coords.y + coords.height}`\n            break\n        case 'height':\n            area.coords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + value}`\n            break\n        }\n        \n        this.drawSavedAreas()\n    },\n\n    // updateAreaCoords(areaId) {\n    //     const area = this.areas.find(a => a.id === areaId)\n    // const coords = this.getAreaCoords(area)\n    // const newCoords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + coords.height}`\n    \n    // // 영역 좌표 직접 업데이트\n    // area.coords = newCoords\n    \n    // // 캔버스 다시 그리기\n    // this.$nextTick(() => {\n    //   this.drawSavedAreas()\n    // })\n    // }\n  }\n}\n</script>\n\n<style scoped>\n.file-info {\n  display: inline-flex;\n  align-items: center;\n  padding: 8px 12px;\n  background: #E3F2FD;\n  border-radius: 4px;\n  color: #1976D2;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.25px;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.file-info .material-icons {\n  font-size: 16px;\n  margin-right: 8px;\n}\n\n.action-btn.visibility {\n  background-color: #2196F3;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.visibility:hover {\n  background-color: #0b7dda;\n}\n\n.action-btn.visibility .material-icons {\n  font-size: 18px;\n}\n\n.action-btn.delete {\n  background-color: #ff4444;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.delete:hover {\n  background-color: #cc0000;\n}\n\n.action-btn.delete .material-icons {\n  font-size: 18px;\n}\n\n.import-controls-container {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.controls-row {\n  display: flex;\n  /* justify-content: space-between; */\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 15px;\n}\n\n.import-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.image-path-input {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-grow: 1;\n}\n\n.path-input {\n  flex-grow: 1;\n  padding: 8px 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.path-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.draggable {\n  cursor: move;\n  pointer-events: all;\n}\n\n.area-background {\n  pointer-events: none;\n  z-index: 1;\n}\n\n.area-background.draggable {\n  pointer-events: all;\n}\n\n.area-background img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.page-container {\n  /* display: flex; */\n  gap: 20px;\n  /* align-items: flex-start; */\n}\n\n.image-section {\n  flex: 1;\n  min-width: 0; /* 이미지가 컨테이너를 벗어나지 않도록 */\n}\n\n.image-selector {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.file-input {\n  display: none;\n}\n\n.select-image-btn {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.select-image-btn:hover {\n  background-color: #45a049;\n}\n\n.image-container {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  \n  border-radius: 4px;\n  background: #fff;  \n  padding: 8px;\n}\n\n.image-display {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  max-height: 80vh; /* 뷰포트 높이의 80%로 최대 높이 제한 (선택사항) */\n  background-image: \n    url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20'%3E%3Crect width='10' height='10' fill='%23ccc'/%3E%3Crect x='10' y='10' width='10' height='10' fill='%23ccc'/%3E%3C/svg%3E\");\n}\n\n.image-map {\n  /* max-width: 100%;\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none; */\n  max-width: none; /* max-width: 100% 제거 */\n  width: auto; /* 원본 크기 유지 */\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.highlight-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n /* switch 스타일 */\n .switch {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  background-color: #ccc;\n  border-radius: 24px;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  border-radius: 50%;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(26px);\n}\n\n.switch-label {\n  margin-left: 10px;\n  font-size: 14px;\n  color: #333;\n}\n\n/* */\n\n.area-number {\n  position: absolute; \n  padding: 2px 6px;\n  /* border-radius: 0px; */\n  font-size: 12px;\n  font-weight: bold;\n  /* margin-top: 3px;\n  margin-left: 3px; */\n  z-index: 2;\n  background-color: white; /* 배경색을 흰색으로 설정 */\n  color: black; /* 글자색을 검정색으로 설정 */\n  mix-blend-mode: difference; /* 배경과 반대되는 색상으로 표시 */\n  transition: background-color 0.3s ease;\n}\n\n.area-number.selected {\n  background-color: rgba(76, 175, 80, 0.6); /* 선택된 영역 강조 색상 */\n  font-weight: bold;\n  mix-blend-mode: normal; /* 선택된 경우 일반 모드로 표시 */\n}\n\n/* Modern Table Styles */\n.area-table-container {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.modern-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin-top: 15px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n  font-size: 12px;\n}\n\n.modern-table thead th {\n  background-color: #d0d0d0;\n  color: #4a5568;\n  font-weight: 600;  \n  text-align: left;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 0.8em;\n  padding: 8px;\n  /* font-size: 12px; */\n}\n\n.modern-table tbody td {\n  padding: 8px;\n  border-bottom: 1px solid #e2e8f0;\n  vertical-align: middle;\n}\n\n.modern-table tbody tr:last-child td {\n  border-bottom: none;\n}\n\n.modern-table tbody tr:hover {\n  background-color: #eff0f1;\n}\n\n/* 각 컬럼 너비 조정 */\n.modern-table td:nth-child(1) { /* No. */\n  width: 20px;\n}\n\n.modern-table td:nth-child(2), /* X */\n.modern-table td:nth-child(3), /* Y */\n.modern-table td:nth-child(4), /* Width */\n.modern-table td:nth-child(5) { /* Height */\n  width: 50px;\n}\n\n.modern-table td:nth-child(6) { /* Image */\n  width: 200px;\n}\n\n.modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n.coordinate-input {\n  padding: 4px 8px;  \n  font-size: 12px;\n  margin: 0 4px;\n  width: calc(100% - 16px); /* 패딩과 마진을 고려한 너비 조정 */\n}\n\n/* .action-btn {\n  padding: 4px 8px;\n  font-size: 12px;  \n} */\n\n.editing-row {\n  background-color: #f0fff4 !important;\n}\n\n\n.coordinate-input::-webkit-outer-spin-button,\n.coordinate-input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.coordinate-input[type=number] {\n  -moz-appearance: textfield;\n}\n\n\n.coordinate-input:disabled {\n  background-color: #f5f5f5;\n  border-color: #e2e8f0;\n  cursor: not-allowed;\n  color: #4a5568;\n}\n\n.coordinate-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.area-id {\n  font-weight: 600;\n  font-size: 0.9em;\n  color: #2c3e50;\n  text-align: center;\n}\n\n.actions-cell {\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9em;\n  transition: all 0.2s;\n}\n\n.action-btn.edit {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.action-btn.edit:hover {\n  background-color: #45a049;\n}\n\n.image-upload {\n  min-width: 120px;\n}\n\n.area-thumbnail {\n  max-width: 50px;\n  max-height: 50px;\n  object-fit: cover;\n  margin-top: 5px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n/* 테이블 셀 너비 조정 */\n.modern-table td {\n  min-width: 80px;\n  padding: 8px 12px; /* 좌우 패딩 증가 */\n}\n\n/* export-buttons */\n.export-buttons {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.export-btn {\n  padding: 8px 16px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #1976D2;\n}\n\n.file-upload-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.selected-filename {\n  font-size: 12px;\n  color: #666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.custom-file-upload:hover {\n  background-color: #e9ecef;\n}\n\n.custom-file-upload .material-icons {\n  font-size: 18px;\n  color: #666;\n}\n\n.image-upload {\n  display: none;\n}\n\n.import-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.import-btn:hover {\n  background-color: #45a049;\n}\n\n.import-btn .material-icons {\n  font-size: 18px;\n}\n\n@media screen and (max-width: 768px) {\n  .modern-table thead {\n    display: none;\n  }\n\n  .modern-table tbody tr {\n    display: grid;\n    grid-template-columns: auto auto auto auto;\n    padding: 8px;\n    border-bottom: 1px solid #e2e8f0;\n  }\n\n  .modern-table tr:nth-child(even) {\n    background-color: #f8f9fa;\n  }\n\n  .modern-table td {\n    padding: 4px;\n    border: none;\n    text-align: center;\n  }\n\n  /* 첫째 줄: No, X, Y, Width, Height */\n  .modern-table td:nth-child(1),\n  .modern-table td:nth-child(2),\n  .modern-table td:nth-child(3),\n  .modern-table td:nth-child(4),\n  .modern-table td:nth-child(5) {\n    grid-row: 1;\n    width: 40px;\n  }\n\n  /* 둘째 줄: , Image, Actions */ \n  .modern-table td:nth-child(6) {\n    grid-row: 2;\n    grid-column: 2 / span 2;\n  }\n\n  .modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n  .modern-table td:last-child {\n    grid-row: 2;\n    grid-column: 4;\n    padding-right: 16px;\n  }\n\n  \n}\n</style>","import { render } from \"./ImageMap.vue?vue&type=template&id=4c156f6a&scoped=true\"\nimport script from \"./ImageMap.vue?vue&type=script&lang=js\"\nexport * from \"./ImageMap.vue?vue&type=script&lang=js\"\n\nimport \"./ImageMap.vue?vue&type=style&index=0&id=4c156f6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c156f6a\"]])\n\nexport default __exports__"],"names":["classof","$String","String","module","exports","argument","TypeError","$TypeError","passed","required","defineBuiltIn","uncurryThis","toString","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","append","$delete","forEach","push","params","undefined","name","length","arguments","$value","this","entries","v","k","key","value","entry","index","dindex","found","entriesLength","enumerable","unsafe","getAll","$has","has","values","DESCRIPTORS","defineBuiltInAccessor","get","count","configurable","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","accept","onChange","_cache","args","$options","importAreaInfo","_createTextVNode","$data","imagePath","_hoisted_6","webkitdirectory","directory","importImages","_createCommentVNode","_hoisted_7","_hoisted_8","handleImageUpload","ref","selectedImage","_hoisted_9","$event","isEditing","BGName","_hoisted_10","_toDisplayString","_hoisted_11","_hoisted_12","_hoisted_13","src","useMap","onLoad","initializeCanvas","onClick","handleImageClick","onMousedown","_withModifiers","startDrawing","onMousemove","drawing","onMouseup","endDrawing","draggable","_hoisted_14","_hoisted_15","_Fragment","_renderList","areas","area","id","shape","coords","href","alt","onMouseover","highlightArea","onMouseout","removeHighlight","_hoisted_16","style","_normalizeStyle","getAreaBackgroundStyle","imageUrl","_hoisted_17","visible","handleCanvasClick","cursor","_normalizeClass","selectedAreaId","getAreaNumberStyle","_hoisted_18","_hoisted_19","_hoisted_20","placeholder","_hoisted_21","isEditingArea","_hoisted_22","getAreaCoords","x","onInput","updateCoord","target","_hoisted_23","number","y","_hoisted_24","width","disabled","title","_hoisted_25","height","_hoisted_26","_hoisted_27","handleAreaImageUpload","_hoisted_29","_hoisted_28","areaFilenames","_hoisted_30","_hoisted_31","toggleVisibility","_hoisted_33","_hoisted_32","deleteArea","_hoisted_34","_hoisted_35","exportAsJson","exportAsCStruct","data","isDrawing","startX","startY","currentArea","editingAreaId","isDragging","dragStartX","dragStartY","BGSize","methods","areaId","find","a","drawSavedAreas","event","rect","getBoundingClientRect","scale","clientWidth","clientX","left","clientY","top","clickedArea","x1","y1","x2","y2","split","map","Number","selectArea","classList","contains","files","Array","from","imageMap","file","startsWith","reader","FileReader","onload","e","result","readAsDataURL","async","content","endsWith","importFromJson","importFromCStruct","readAsText","clearAllAreas","JSON","parse","areasData","isArray","Error","item","coordinates","console","error","filter","filename","$nextTick","$refs","highlightCanvas","alert","message","imagePathMatch","match","BGNameMatch","areaRegex","exec","parseInt","log","exportData","blob","Blob","stringify","downloadFile","structContent","link","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","position","overflow","triggerFileInput","fileInput","formatFileSize","bytes","units","size","unitIndex","toFixed","$emit","toggleEditMode","canvas","ctx","getContext","clearRect","num","Math","round","strokeStyle","lineWidth","setLineDash","strokeRect","naturalWidth","currentX","currentY","fillStyle","fillRect","img","Image","endX","endY","abs","newArea","min","toggleEdit","isNaN","__exports__","render"],"sourceRoot":""}
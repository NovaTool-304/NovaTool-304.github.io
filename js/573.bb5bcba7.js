"use strict";(self["webpackChunknovatool_claude"]=self["webpackChunknovatool_claude"]||[]).push([[573],{655:function(e,t,a){var i=a(6955),s=String;e.exports=function(e){if("Symbol"===i(e))throw new TypeError("Cannot convert a Symbol value to a string");return s(e)}},2812:function(e){var t=TypeError;e.exports=function(e,a){if(e<a)throw new t("Not enough arguments");return e}},4603:function(e,t,a){var i=a(6840),s=a(9504),r=a(655),n=a(2812),l=URLSearchParams,o=l.prototype,d=s(o.append),h=s(o["delete"]),c=s(o.forEach),u=s([].push),g=new l("a=1&a=2&b=3");g["delete"]("a",1),g["delete"]("b",void 0),g+""!=="a=2"&&i(o,"delete",(function(e){var t=arguments.length,a=t<2?void 0:arguments[1];if(t&&void 0===a)return h(this,e);var i=[];c(this,(function(e,t){u(i,{key:t,value:e})})),n(t,1);var s,l=r(e),o=r(a),g=0,m=0,p=!1,f=i.length;while(g<f)s=i[g++],p||s.key===l?(p=!0,h(this,s.key)):m++;while(m<f)s=i[m++],s.key===l&&s.value===o||d(this,s.key,s.value)}),{enumerable:!0,unsafe:!0})},7566:function(e,t,a){var i=a(6840),s=a(9504),r=a(655),n=a(2812),l=URLSearchParams,o=l.prototype,d=s(o.getAll),h=s(o.has),c=new l("a=1");!c.has("a",2)&&c.has("a",void 0)||i(o,"has",(function(e){var t=arguments.length,a=t<2?void 0:arguments[1];if(t&&void 0===a)return h(this,e);var i=d(this,e);n(t,1);var s=r(a),l=0;while(l<i.length)if(i[l++]===s)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:function(e,t,a){var i=a(3724),s=a(9504),r=a(2106),n=URLSearchParams.prototype,l=s(n.forEach);i&&!("size"in n)&&r(n,"size",{get:function(){var e=0;return l(this,(function(){e++})),e},configurable:!0,enumerable:!0})},9573:function(e,t,a){a.r(t),a.d(t,{default:function(){return V}});var i=a(6768),s=a(5130),r=a(4232);const n={class:"page-container"},l={class:"import-controls-container"},o={class:"controls-row"},d={class:"import-controls"},h={class:"import-btn"},c={key:0,class:"import-btn"},u={class:"image-selector"},g={class:"import-btn"},m={key:0,class:"switch"},p={key:0,class:"file-info"},f={key:1,class:"image-section"},k={class:"image-container"},v={key:0,class:"image-display"},b=["src"],A={key:0,name:"workMap"},y=["shape","coords","href","alt","onMouseover"],C=["src"],w={key:0,class:"area-table-container"},L={class:"import-controls"},I={class:"image-path-input"},$={class:"modern-table"},S={class:"area-id"},E=["onUpdate:modelValue","onInput"],x=["onUpdate:modelValue","onInput"],N=["onUpdate:modelValue","onInput","disabled","title"],U=["onUpdate:modelValue","onInput","disabled","title"],X={class:"file-upload-container"},B=["title"],F=["onChange"],M={key:0,class:"selected-filename"},D={class:"actions-cell"},R=["onClick","title"],G={class:"material-icons"},W=["onClick"],P={class:"export-buttons"};function _(e,t,a,_,J,Y){return(0,i.uX)(),(0,i.CE)("div",n,[(0,i.Lk)("div",l,[(0,i.Lk)("div",o,[(0,i.Lk)("div",d,[(0,i.Lk)("label",h,[(0,i.Lk)("input",{type:"file",accept:".json,.h",onChange:t[0]||(t[0]=(...e)=>Y.importAreaInfo&&Y.importAreaInfo(...e)),class:"file-input"},null,32),t[15]||(t[15]=(0,i.Lk)("span",{class:"material-icons"},"upload_file",-1)),t[16]||(t[16]=(0,i.eW)(" Import "))]),J.imagePath?((0,i.uX)(),(0,i.CE)("label",c,[(0,i.Lk)("input",{type:"file",webkitdirectory:"",directory:"",onChange:t[1]||(t[1]=(...e)=>Y.importImages&&Y.importImages(...e)),class:"file-input"},null,32),t[17]||(t[17]=(0,i.Lk)("span",{class:"material-icons"},"drive_folder_upload",-1)),t[18]||(t[18]=(0,i.eW)(" Load Images "))])):(0,i.Q3)("",!0)]),(0,i.Lk)("div",u,[(0,i.Lk)("label",g,[(0,i.Lk)("input",{type:"file",accept:"image/*",onChange:t[2]||(t[2]=(...e)=>Y.handleImageUpload&&Y.handleImageUpload(...e)),ref:"fileInput",class:"file-input"},null,544),t[19]||(t[19]=(0,i.Lk)("span",{class:"material-icons"},"file_open",-1)),t[20]||(t[20]=(0,i.eW)(" Select BG "))]),J.selectedImage?((0,i.uX)(),(0,i.CE)("label",m,[t[21]||(t[21]=(0,i.Lk)("span",{class:"switch-label"},"Edit Mode",-1)),(0,i.bo)((0,i.Lk)("input",{type:"checkbox","onUpdate:modelValue":t[3]||(t[3]=e=>J.isEditing=e)},null,512),[[s.lH,J.isEditing]]),t[22]||(t[22]=(0,i.Lk)("span",{class:"slider round"},null,-1))])):(0,i.Q3)("",!0)])])]),J.BGName?((0,i.uX)(),(0,i.CE)("span",p,[t[23]||(t[23]=(0,i.Lk)("span",{class:"material-icons"},"description",-1)),(0,i.eW)(" "+(0,r.v_)(J.BGName),1)])):(0,i.Q3)("",!0),t[29]||(t[29]=(0,i.Lk)("p",null,null,-1)),J.BGName?((0,i.uX)(),(0,i.CE)("div",f,[(0,i.Lk)("div",k,[J.selectedImage?((0,i.uX)(),(0,i.CE)("div",v,[(0,i.Lk)("img",{src:J.selectedImage,useMap:"#workMap",class:"image-map",onLoad:t[4]||(t[4]=(...e)=>Y.initializeCanvas&&Y.initializeCanvas(...e)),onClick:t[5]||(t[5]=(...e)=>Y.handleImageClick&&Y.handleImageClick(...e)),onMousedown:t[6]||(t[6]=(0,s.D$)(((...e)=>Y.startDrawing&&Y.startDrawing(...e)),["prevent"])),onMousemove:t[7]||(t[7]=(0,s.D$)(((...e)=>Y.drawing&&Y.drawing(...e)),["prevent"])),onMouseup:t[8]||(t[8]=(0,s.D$)(((...e)=>Y.endDrawing&&Y.endDrawing(...e)),["prevent"])),draggable:"false"},null,40,b),J.isEditing?(0,i.Q3)("",!0):((0,i.uX)(),(0,i.CE)("map",A,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(J.areas,(e=>((0,i.uX)(),(0,i.CE)("area",{key:e.id,shape:e.shape,coords:e.coords,href:e.href,alt:e.alt,onClick:t[9]||(t[9]=(0,s.D$)((()=>{}),["prevent"])),onMouseover:t=>Y.highlightArea(e.id),onMouseout:t[10]||(t[10]=e=>Y.removeHighlight())},null,40,y)))),128))])),((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(J.areas,(e=>(0,i.bo)(((0,i.uX)(),(0,i.CE)("div",{key:"bg-"+e.id,class:"area-background",style:(0,r.Tr)(Y.getAreaBackgroundStyle(e))},[e.imageUrl?((0,i.uX)(),(0,i.CE)("img",{key:0,src:e.imageUrl,alt:"Area background"},null,8,C)):(0,i.Q3)("",!0)],4)),[[s.aG,e.visible&&e.imageUrl]]))),128)),(0,i.Lk)("canvas",{ref:"highlightCanvas",class:"highlight-canvas",onClick:t[11]||(t[11]=e=>Y.handleCanvasClick(e)),style:(0,r.Tr)({cursor:J.isEditing?"pointer":"default"})},null,4),((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(J.areas,(e=>((0,i.uX)(),(0,i.CE)("div",{key:e.id,class:(0,r.C4)(["area-number",{selected:J.selectedAreaId===e.id}]),style:(0,r.Tr)(Y.getAreaNumberStyle(e))},(0,r.v_)(e.id),7)))),128))])):(0,i.Q3)("",!0)]),J.areas.length>0?((0,i.uX)(),(0,i.CE)("div",w,[t[27]||(t[27]=(0,i.Lk)("h3",null,"Area Info",-1)),(0,i.Lk)("div",L,[(0,i.Lk)("div",I,[(0,i.bo)((0,i.Lk)("input",{type:"text",id:"imagePath","onUpdate:modelValue":t[12]||(t[12]=e=>J.imagePath=e),placeholder:"Enter image path",class:"path-input"},null,512),[[s.Jo,J.imagePath]])])]),(0,i.Lk)("table",$,[t[26]||(t[26]=(0,i.Lk)("thead",null,[(0,i.Lk)("tr",null,[(0,i.Lk)("th",null,"No."),(0,i.Lk)("th",null,"X"),(0,i.Lk)("th",null,"Y"),(0,i.Lk)("th",null,"Width"),(0,i.Lk)("th",null,"Height"),(0,i.Lk)("th",null,"Image"),(0,i.Lk)("th")])],-1)),(0,i.Lk)("tbody",null,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(J.areas,(e=>((0,i.uX)(),(0,i.CE)("tr",{key:e.id,class:(0,r.C4)({"editing-row":Y.isEditingArea(e.id)})},[(0,i.Lk)("td",S,(0,r.v_)(e.id),1),(0,i.Lk)("td",null,[(0,i.bo)((0,i.Lk)("input",{type:"number","onUpdate:modelValue":t=>Y.getAreaCoords(e).x=t,onInput:t=>Y.updateCoord(e.id,"x",t.target.value),class:"coordinate-input"},null,40,E),[[s.Jo,Y.getAreaCoords(e).x,void 0,{number:!0}]])]),(0,i.Lk)("td",null,[(0,i.bo)((0,i.Lk)("input",{type:"number","onUpdate:modelValue":t=>Y.getAreaCoords(e).y=t,onInput:t=>Y.updateCoord(e.id,"y",t.target.value),class:"coordinate-input"},null,40,x),[[s.Jo,Y.getAreaCoords(e).y,void 0,{number:!0}]])]),(0,i.Lk)("td",null,[(0,i.bo)((0,i.Lk)("input",{type:"number","onUpdate:modelValue":t=>Y.getAreaCoords(e).width=t,onInput:t=>Y.updateCoord(e.id,"width",t.target.value),class:"coordinate-input",disabled:e.imageUrl,title:e.imageUrl?"If an image is set, you can't change its width":""},null,40,N),[[s.Jo,Y.getAreaCoords(e).width,void 0,{number:!0}]])]),(0,i.Lk)("td",null,[(0,i.bo)((0,i.Lk)("input",{type:"number","onUpdate:modelValue":t=>Y.getAreaCoords(e).height=t,onInput:t=>Y.updateCoord(e.id,"height",t.target.value),class:"coordinate-input",disabled:e.imageUrl,title:e.imageUrl?"If an image is set, you can't change its height":""},null,40,U),[[s.Jo,Y.getAreaCoords(e).height,void 0,{number:!0}]])]),(0,i.Lk)("td",null,[(0,i.Lk)("div",X,[(0,i.Lk)("label",{class:"custom-file-upload",title:"Select an image for "+e.id},[(0,i.Lk)("input",{type:"file",accept:"image/*",onChange:t=>Y.handleAreaImageUpload(t,e.id),class:"image-upload"},null,40,F),t[24]||(t[24]=(0,i.Lk)("span",{class:"material-icons"},"image",-1))],8,B),J.areaFilenames[e.id]?((0,i.uX)(),(0,i.CE)("span",M,(0,r.v_)(J.areaFilenames[e.id]),1)):(0,i.Q3)("",!0)])]),(0,i.Lk)("td",D,[(0,i.Lk)("button",{onClick:t=>Y.toggleVisibility(e.id),class:"action-btn visibility",title:e.visible?"Hide":"Show"},[(0,i.Lk)("span",G,(0,r.v_)(e.visible?"visibility":"visibility_off"),1)],8,R),(0,i.Lk)("button",{onClick:t=>Y.deleteArea(e.id),class:"action-btn delete",title:"Remove area"},t[25]||(t[25]=[(0,i.Lk)("span",{class:"material-icons"},"clear",-1)]),8,W)])],2)))),128))])]),t[28]||(t[28]=(0,i.Lk)("p",null,null,-1)),(0,i.Lk)("div",P,[(0,i.Lk)("button",{onClick:t[13]||(t[13]=(...e)=>Y.exportAsJson&&Y.exportAsJson(...e)),class:"export-btn"},"Save to JSON "),(0,i.Lk)("button",{onClick:t[14]||(t[14]=(...e)=>Y.exportAsCStruct&&Y.exportAsCStruct(...e)),class:"export-btn"},"Save to C Struct")])])):(0,i.Q3)("",!0)])):(0,i.Q3)("",!0)])}a(4114),a(8111),a(2489),a(116),a(7588),a(1701),a(4603),a(7566),a(8721);var J={name:"ImageMap",data(){return{selectedImage:null,areas:[],areaFilenames:{},isEditing:!0,isDrawing:!1,startX:0,startY:0,currentArea:null,editingAreaId:null,isDragging:!1,selectedAreaId:null,dragStartX:0,dragStartY:0,imagePath:"",BGName:"",BGSize:""}},methods:{toggleVisibility(e){const t=this.areas.find((t=>t.id===e));t&&(t.visible=!t.visible,this.drawSavedAreas())},handleCanvasClick(e){if(!this.isEditing)return;const t=e.target.getBoundingClientRect(),a=e.target.width/e.target.clientWidth,i=(e.clientX-t.left)*a,s=(e.clientY-t.top)*a,r=this.areas.find((e=>{const[t,a,r,n]=e.coords.split(",").map(Number);return i>=t&&i<=r&&s>=a&&s<=n}));r?(this.selectedAreaId=r.id,this.highlightArea(r.id)):(this.selectedAreaId=null,this.drawSavedAreas())},selectArea(e){this.selectedAreaId=e},handleImageClick(e){e.target.classList.contains("image-map")&&(this.selectedAreaId=null)},importImages(e){const t=Array.from(e.target.files),a={};t.forEach((e=>{if(e.type.startsWith("image/")){const t=new FileReader;t.onload=t=>{a[e.name]=t.target.result,e.name===this.BGName&&(this.selectedImage=t.target.result),this.areas.forEach((a=>{this.areaFilenames[a.id]===e.name&&(a.imageUrl=t.target.result)}))},t.readAsDataURL(e)}}))},importAreaInfo(e){const t=e.target.files[0];if(!t)return;const a=new FileReader;a.onload=async e=>{const a=e.target.result;t.name.endsWith(".json")?await this.importFromJson(a):t.name.endsWith(".h")&&await this.importFromCStruct(a)},a.readAsText(t)},clearAllAreas(){this.areas=[],this.areaFilenames={}},importFromJson(e){try{const t=JSON.parse(e);let a;if(this.imagePath=t.imagePath||"",this.BGName=t.BGName||"",Array.isArray(t))a=t,this.imagePath="";else{if(!t||"object"!==typeof t)throw new Error("Invalid JSON structure");this.imagePath=t.imagePath||"",a=t.areas&&Array.isArray(t.areas)?t.areas:[t]}this.clearAllAreas(),this.areas=a.map((e=>e.coordinates?{id:e.id||0,shape:"rect",coords:`${e.coordinates.x},${e.coordinates.y},${e.coordinates.x+e.coordinates.width},${e.coordinates.y+e.coordinates.height}`,href:"#",alt:`Area ${e.id||0}`,imageUrl:null,visible:void 0===e.visible||e.visible}:(console.error("Missing coordinates in area:",e),null))).filter((e=>null!==e)),this.areaFilenames={},a.forEach((e=>{e.id&&e.filename&&(this.areaFilenames[e.id]=e.filename)})),this.$nextTick((()=>{this.$refs.highlightCanvas&&this.selectedImage&&this.drawSavedAreas()}))}catch(t){console.error("Error importing JSON:",t),alert("The JSON file format is not correct:"+t.message)}},importFromCStruct(e){try{const t=e.match(/#define IMAGE_PATH "([^"]*)"/)||e.match(/\/\/ Image Path: (.+)/);t&&t[1]&&(this.imagePath=t[1]);const a=e.match(/#define BGName "([^"]*)"/)||e.match(/\/\/ BG Name: (.+)/);a&&a[1]&&(this.BGName=a[1]);const i=/{\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*"([^"]*)"\s*,\s*(\d+)\s*}/g;let s;this.clearAllAreas();while(null!==(s=i.exec(e))){const e=parseInt(s[1]),t=parseInt(s[2]),a=parseInt(s[3]),i=parseInt(s[4]),r=parseInt(s[5]),n=s[6],l="1"===s[7];this.areas.push({id:e,shape:"rect",coords:`${t},${a},${t+i},${a+r}`,href:"#",alt:`Area ${e}`,imageUrl:null,visible:l}),n&&(this.areaFilenames[e]=n),console.log("Imported area:",{id:e,x:t,y:a,width:i,height:r,filename:n,visible:l})}if(0===this.areas.length)return console.error("No areas found in the C struct file. Content:",e),void alert("No valid areas found in the C struct file.");this.$nextTick((()=>{this.$refs.highlightCanvas&&this.selectedImage&&this.drawSavedAreas()})),console.log("Successfully imported C struct data:",this.areas)}catch(t){console.error("Error importing C struct:",t),alert("The C Struct file format is not correct: "+t.message)}},exportAsJson(){const e={imagePath:this.imagePath,BGName:this.BGName,areas:this.areas.map((e=>({id:e.id,coordinates:this.getAreaCoords(e),filename:this.areaFilenames[e.id]||"",visible:e.visible})))},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"});this.downloadFile(t,"image_map_areas.json")},exportAsCStruct(){let e="// Image Path: "+this.imagePath+"\n";e+="// BG Name: "+this.BGName+"\n\n",e+="typedef struct {\n",e+="    int id;\n",e+="    int x;\n",e+="    int y;\n",e+="    int width;\n",e+="    int height;\n",e+="    char filename[256];\n",e+="    int visible;\n",e+="} Area;\n\n",e+='#define IMAGE_PATH "'+this.imagePath+'"\n',e+='#define BGName "'+this.BGName+'"\n\n',e+="Area areas[] = {\n",this.areas.forEach((t=>{const a=this.getAreaCoords(t),i=this.areaFilenames[t.id]||"";e+=`    {${t.id}, ${a.x}, ${a.y}, ${a.width}, ${a.height}, "${i}", ${t.visible?1:0}},\n`})),e+="};\n";const t=new Blob([e],{type:"text/plain"});this.downloadFile(t,"image_map_areas.h")},downloadFile(e,t){const a=document.createElement("a");a.href=URL.createObjectURL(e),a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a)},getAreaBackgroundStyle(e){const t=this.getAreaCoords(e);return{position:"absolute",left:`${t.x}px`,top:`${t.y}px`,width:`${t.width}px`,height:`${t.height}px`,overflow:"hidden"}},triggerFileInput(){this.$refs.fileInput.click()},formatFileSize(e){const t=["B","KB","MB","GB"];let a=e,i=0;while(a>=1024&&i<t.length-1)a/=1024,i++;return`${a.toFixed(1)} ${t[i]}`},handleImageUpload(e){const t=e.target.files[0];if(t&&t.type.startsWith("image/")){this.BGName=t.name,this.BGSize=this.formatFileSize(t.size);const e=new FileReader;e.onload=e=>{this.selectedImage=e.target.result,this.$emit("image-selected",t)},e.readAsDataURL(t),this.isEditing=!0}},toggleEditMode(){this.isEditing=!this.isEditing},drawSavedAreas(){const e=this.$refs.highlightCanvas,t=e.getContext("2d");t.clearRect(0,0,e.width,e.height),this.areas.forEach((e=>{const[a,i,s,r]=e.coords.split(",").map((e=>Math.round(Number(e)))),n=s-a,l=r-i;t.strokeStyle="white",t.lineWidth=2,t.setLineDash([]),t.strokeRect(a,i,n,l),t.strokeStyle="black",t.lineWidth=1,t.setLineDash([4,4]),t.strokeRect(a,i,n,l)})),t.setLineDash([])},startDrawing(e){if(!this.isEditing)return;const t=e.target.getBoundingClientRect(),a=e.target.naturalWidth/e.target.clientWidth;this.startX=Math.round((e.clientX-t.left)*a),this.startY=Math.round((e.clientY-t.top)*a),this.isDrawing=!0,this.currentArea={startX:this.startX,startY:this.startY}},drawing(e){if(!this.isDrawing||!this.isEditing)return;const t=e.target.getBoundingClientRect(),a=e.target.naturalWidth/e.target.clientWidth,i=Math.round((e.clientX-t.left)*a),s=Math.round((e.clientY-t.top)*a),r=this.$refs.highlightCanvas,n=r.getContext("2d");n.clearRect(0,0,r.width,r.height),this.drawSavedAreas();const l=i-this.currentArea.startX,o=s-this.currentArea.startY;n.fillStyle="rgba(255, 255, 255, 0.3)",n.fillRect(this.currentArea.startX,this.currentArea.startY,l,o),n.strokeStyle="white",n.lineWidth=2,n.strokeRect(this.currentArea.startX,this.currentArea.startY,l,o),n.strokeStyle="black",n.lineWidth=1,n.setLineDash([4,4]),n.strokeRect(this.currentArea.startX,this.currentArea.startY,l,o),n.setLineDash([])},handleAreaImageUpload(e,t){const a=e.target.files[0];if(a&&a.type.startsWith("image/")){const e=new FileReader;e.onload=e=>{const i=this.areas.find((e=>e.id===t)),s=new Image;s.onload=()=>{const r=this.getAreaCoords(i);i.imageUrl=e.target.result,i.coords=`${r.x},${r.y},${r.x+s.width},${r.y+s.height}`,this.areaFilenames[t]=a.name,this.drawSavedAreas()},s.src=e.target.result},e.readAsDataURL(a)}},endDrawing(e){if(!this.isDrawing||!this.isEditing)return;const t=e.target.getBoundingClientRect(),a=e.target.naturalWidth/e.target.clientWidth,i=Math.round((e.clientX-t.left)*a),s=Math.round((e.clientY-t.top)*a);if(Math.abs(i-this.currentArea.startX)<10||Math.abs(s-this.currentArea.startY)<10)return this.isDrawing=!1,void this.drawSavedAreas();const r={id:this.areas.length+1,shape:"rect",coords:`${this.currentArea.startX},${this.currentArea.startY},${i},${s}`,href:"#",alt:`Area ${this.areas.length+1}`,imageUrl:null,visible:!0};this.areas.push(r),this.isDrawing=!1,this.drawSavedAreas()},highlightArea(e){const t=this.$refs.highlightCanvas,a=t.getContext("2d");this.drawSavedAreas();const i=this.areas.find((t=>t.id===e)),[s,r,n,l]=i.coords.split(",").map((e=>Math.round(Number(e)))),o=n-s,d=l-r;a.fillStyle="rgba(0, 255, 0, 0.3)",a.fillRect(s,r,o,d),a.strokeStyle="white",a.lineWidth=2,a.setLineDash([]),a.strokeRect(s,r,o,d),a.strokeStyle="black",a.lineWidth=1,a.setLineDash([4,4]),a.strokeRect(s,r,o,d),a.setLineDash([])},removeHighlight(){this.drawSavedAreas()},initializeCanvas(){const e=event.target,t=this.$refs.highlightCanvas;t.width=e.width,t.height=e.height,this.drawSavedAreas()},getAreaCoords(e){const[t,a,i,s]=e.coords.split(",").map(Number);return{x:Math.min(t,i),y:Math.min(a,s),width:Math.abs(i-t),height:Math.abs(s-a)}},getAreaNumberStyle(e){const t=this.getAreaCoords(e);return{left:`${t.x}px`,top:`${t.y}px`}},deleteArea(e){this.areas=this.areas.filter((t=>t.id!==e)),this.drawSavedAreas()},toggleEdit(e){this.editingAreaId=this.editingAreaId===e?null:e},isEditingArea(e){return this.editingAreaId===e},updateCoord(e,t,a){const i=this.areas.find((t=>t.id===e)),s=this.getAreaCoords(i);switch(a=!a||isNaN(a)||a<0?0:parseInt(a),t){case"x":i.coords=`${a},${s.y},${a+s.width},${s.y+s.height}`;break;case"y":i.coords=`${s.x},${a},${s.x+s.width},${a+s.height}`;break;case"width":i.coords=`${s.x},${s.y},${s.x+a},${s.y+s.height}`;break;case"height":i.coords=`${s.x},${s.y},${s.x+s.width},${s.y+a}`;break}this.drawSavedAreas()}}},Y=a(1241);const T=(0,Y.A)(J,[["render",_],["__scopeId","data-v-4c156f6a"]]);var V=T}}]);
//# sourceMappingURL=573.bb5bcba7.js.map
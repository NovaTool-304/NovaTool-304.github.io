{"version":3,"file":"js/388.0051bdde.js","mappings":"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","sources":["webpack://novatool_claude/./src/components/BatteryCalc.vue","webpack://novatool_claude/./node_modules/chart.js/auto/auto.js","webpack://novatool_claude/./src/components/BatteryCalc.vue?21d5"],"sourcesContent":["<template>\n    <div class=\"calculator-container\">\n        <div class=\"calculator-card\">\n            <h2>Battery life calculator</h2>\n        \n            <div class=\"input-section\">\n                <div class=\"capacity-section\">\n                    <div class=\"input-field\">\n                        <label>Battery capacity (mAh)</label>\n                        <input type=\"number\" v-model=\"batteryCapacity\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                    </div>\n                </div>          \n    \n                <!-- 구분선 -->\n                <div class=\"divider\"></div>\n                <!-- 전류 및 시간 입력 섹션 -->\n                <div class=\"current-time-section\">\n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Execution Current(mA)</label>\n                            <input type=\"number\" v-model=\"runningCurrent\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Execution time(time)</label>\n                            <input type=\"number\" v-model=\"runningTime\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                    </div>\n            \n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Idle current(mA)</label>\n                            <input type=\"number\" v-model=\"idleCurrent\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Idle time(time)</label>\n                            <input type=\"number\" v-model=\"idleTime\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                    </div>\n            \n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Ready current(mA)</label>\n                            <input type=\"number\" v-model=\"standbyCurrent\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Ready time(time)</label>\n                            <input type=\"number\" v-model=\"standbyTime\" @wheel=\"handleWheel\" @keydown.up=\"handleKeyUp\" @keydown.down=\"handleKeyDown\" @input=\"validateInput\" min=\"0\" step=\"1\"/>\n                        </div>\n                    </div>\n                </div> \n\n                <button class=\"calculate-btn\" @click=\"calculate\">\n                    <span class=\"material-icons\">calculate</span>\n                    Calculation\n                </button>\n                \n                <div class=\"chart-container\" v-if=\"averageCurrent > 0\">\n                    <canvas ref=\"powerChart\"></canvas>\n                </div>\n                \n                <div class=\"results\" v-if=\"averageCurrent > 0\">\n                    <div class=\"result-chip\">\n                        Average current consumption: {{ averageCurrent.toFixed(3) }} mA\n                    </div>\n                    <div class=\"result-chip\">\n                        Expected battery life: {{ batteryLife.toFixed(1)}} Hours({{ formattedBatteryLife }})\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </template>\n  \n<script>\nimport { Chart } from 'chart.js/auto'\n\nexport default {    \n    data() {\n        return {\n            batteryCapacity: 0,\n            runningCurrent: 0,\n            runningTime: 0,\n            idleCurrent: 0,\n            idleTime: 0,\n            standbyCurrent: 0,\n            standbyTime: 0,\n            averageCurrent: 0,\n            batteryLife: 0,\n            chart: null\n        };\n    },\n\ncomputed: {\n    formattedBatteryLife() {\n        const days = Math.floor(this.batteryLife / 24);\n        const hours = Math.floor(this.batteryLife % 24);\n        \n        if (days > 0) {\n            return `${days}day ${hours}hour`;\n        }\n        return `${hours}hour`;\n    }\n},\nmethods: {\n    initChart() {\n        const ctx = this.$refs.powerChart;\n        const totalPower = (this.runningCurrent * this.runningTime) + \n                            (this.idleCurrent * this.idleTime) + \n                            (this.standbyCurrent * this.standbyTime);\n                            \n        const runningPercentage = ((this.runningCurrent * this.runningTime) / totalPower * 100).toFixed(1);\n        const idlePercentage = ((this.idleCurrent * this.idleTime) / totalPower * 100).toFixed(1);\n        const standbyPercentage = ((this.standbyCurrent * this.standbyTime) / totalPower * 100).toFixed(1);\n\n        this.chart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n            labels: ['Power Consumption'],\n            datasets: [\n                {\n                label: `Running (${runningPercentage}%)`,\n                data: [this.runningCurrent * this.runningTime],\n                backgroundColor: 'rgba(255, 99, 132, 0.8)',\n                borderWidth: 1\n                },\n                {\n                label: `Idle (${idlePercentage}%)`,\n                data: [this.idleCurrent * this.idleTime],\n                backgroundColor: 'rgba(54, 162, 235, 0.8)',\n                borderWidth: 1\n                },\n                {\n                label: `Ready (${standbyPercentage}%)`,\n                data: [this.standbyCurrent * this.standbyTime],\n                backgroundColor: 'rgba(255, 206, 86, 0.8)',\n                borderWidth: 1\n                }\n            ]\n            },\n            options: {\n                indexAxis: 'y',\n                responsive: true,\n                scales: {\n                    x: {\n                        stacked: true,\n                        title: {\n                            display: true,\n                            text: 'Power Consumption (mA·h)'\n                        }\n                    },\n                    y: {\n                        stacked: true\n                    }\n                },\n                plugins: {\n                    legend: {\n                        position: 'bottom'\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: function(context) {\n                            const label = context.dataset.label || '';\n                            const value = context.parsed.x || 0;\n                            return `${label}: ${value.toFixed(1)} mA·h`;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    },\n\n    updateChart() {\n        const totalPower = (this.runningCurrent * this.runningTime) + \n                    (this.idleCurrent * this.idleTime) + \n                    (this.standbyCurrent * this.standbyTime);\n\n        const runningPercentage = ((this.runningCurrent * this.runningTime) / totalPower * 100).toFixed(1);\n        const idlePercentage = ((this.idleCurrent * this.idleTime) / totalPower * 100).toFixed(1);\n        const standbyPercentage = ((this.standbyCurrent * this.standbyTime) / totalPower * 100).toFixed(1);\n\n        this.chart.data.datasets[0].label = `Running (${runningPercentage}%)`;\n        this.chart.data.datasets[1].label = `Idle (${idlePercentage}%)`;\n        this.chart.data.datasets[2].label = `Ready (${standbyPercentage}%)`;\n        \n        this.chart.data.datasets[0].data = [this.runningCurrent * this.runningTime];\n        this.chart.data.datasets[1].data = [this.idleCurrent * this.idleTime];\n        this.chart.data.datasets[2].data = [this.standbyCurrent * this.standbyTime];\n        \n        this.chart.update();\n    },  \n\n    handleWheel(event) {\n        if (event.target.matches(':hover')) {\n            event.preventDefault();\n            const delta = event.deltaY > 0 ? -1 : 1;\n            const newValue = Math.max(0, Number(event.target.value) + delta);\n            event.target.value = newValue;\n            event.target.dispatchEvent(new Event('input'));\n        }\n    },\n        \n    handleKeyUp(event) {\n        event.preventDefault();\n        const newValue = Number(event.target.value) + 1;\n        event.target.value = newValue;\n        event.target.dispatchEvent(new Event('input'));\n    },\n        \n    handleKeyDown(event) {\n        event.preventDefault();\n        const newValue = Math.max(0, Number(event.target.value) - 1);\n        event.target.value = newValue;\n        event.target.dispatchEvent(new Event('input'));\n    },\n\n    validateInput(event) {\n        const value = Number(event.target.value);\n        if (value < 0) {\n            event.target.value = 0;\n            event.target.dispatchEvent(new Event('input'));\n        }\n    },\n\n    calculate() {\n        const totalTime = this.runningTime + this.idleTime + this.standbyTime;\n        const averageCurrent =\n        (this.runningCurrent * this.runningTime +\n            this.idleCurrent * this.idleTime +\n            this.standbyCurrent * this.standbyTime) /\n        totalTime;\n        const batteryLife = this.batteryCapacity / averageCurrent;\n        \n        this.averageCurrent = averageCurrent;\n        this.batteryLife = batteryLife;\n\n        this.$nextTick(() => {\n            if (this.chart) {\n                this.chart.destroy(); // 기존 차트 정리\n                this.chart = null;\n            }\n            this.initChart();\n        });\n    },        \n},\n};\n</script>\n  \n<style scoped>\n    .chart-container {\n    margin-top: 20px;\n    height: 300px;\n    width: 100%;\n    }\n\n    input[type=\"number\"] {\n        -moz-appearance: textfield;\n    }\n\n    input[type=\"number\"]::-webkit-inner-spin-button,\n    input[type=\"number\"]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n\n    input[type=\"number\"]:hover {\n        cursor: ns-resize;\n    }\n\n    .capacity-section {\n        padding: 10px 0;\n    }\n\n    .divider {\n        height: 1px;\n        background-color: #797979;\n        margin: 5px 0 5px 0;\n    }\n\n    .current-time-section {\n        display: flex;\n        flex-direction: column;\n        gap: 30px;\n    }\n\n    .calculator-container {\n        max-width: 800px;\n        margin: 20px auto;\n        padding: 0 20px;\n    }\n    \n    .calculator-card {\n        background: white;\n        border-radius: 8px;\n        padding: 24px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n  \n    h2{\n        margin: 0 0 24px 0;\n        color: #333;\n    }\n    \n    .input-section {\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n    }\n\n    .input-field input {\n        width: 100%;\n        box-sizing: border-box;\n    }\n  \n    .input-group {\n        display: flex;\n        gap: 20px;\n    }\n\n    .input-field {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n    }\n  \n    label {\n        margin-bottom: 8px;\n        color: #666;\n        font-size: 14px;\n    }\n  \n    input {\n        padding: 8px 12px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n  \n    input:focus {\n        outline: none;\n        border-color: #2196F3;\n    }\n  \n    .calculate-btn {\n        background: #2196F3;\n        color: white;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 16px;\n        transition: background 0.3s;\n        align-self: flex-start;\n    }\n  \n    .calculate-btn:hover {\n        background: #1976D2;\n    }\n\n    .calculate-btn .material-icons {\n        font-size: 18px;\n    }\n  \n    .results {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n    }\n  \n    .result-chip {\n        background: #E3F2FD;\n        color: #1976D2;\n        padding: 12px 20px;\n        border-radius: 8px;\n        font-size: 15px;\n        width: fit-content;\n    }\n\n    @media screen and (max-width: 768px) {\n        .input-group {\n            flex-direction: column;\n            gap: 16px;\n    }\n  }\n  </style>\n  ","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { render } from \"./BatteryCalc.vue?vue&type=template&id=ad5a1458&scoped=true\"\nimport script from \"./BatteryCalc.vue?vue&type=script&lang=js\"\nexport * from \"./BatteryCalc.vue?vue&type=script&lang=js\"\n\nimport \"./BatteryCalc.vue?vue&type=style&index=0&id=ad5a1458&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ad5a1458\"]])\n\nexport default __exports__"],"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","_cache","$event","$data","batteryCapacity","onWheel","args","$options","handleWheel","onKeydown","_withKeys","handleKeyUp","handleKeyDown","onInput","validateInput","min","step","_hoisted_6","_hoisted_7","_hoisted_8","runningCurrent","_hoisted_9","runningTime","_hoisted_10","_hoisted_11","idleCurrent","_hoisted_12","idleTime","_hoisted_13","_hoisted_14","standbyCurrent","_hoisted_15","standbyTime","onClick","calculate","_createTextVNode","averageCurrent","_hoisted_16","_hoisted_17","_createCommentVNode","_hoisted_18","_hoisted_19","_toDisplayString","toFixed","_hoisted_20","batteryLife","formattedBatteryLife","Chart","register","registerables","data","chart","computed","days","Math","floor","this","hours","methods","initChart","ctx","$refs","powerChart","totalPower","runningPercentage","idlePercentage","standbyPercentage","labels","datasets","label","backgroundColor","borderWidth","options","indexAxis","responsive","scales","x","stacked","title","display","text","y","plugins","legend","position","tooltip","callbacks","context","dataset","value","parsed","updateChart","update","event","target","matches","preventDefault","delta","deltaY","newValue","max","Number","dispatchEvent","Event","totalTime","$nextTick","destroy","__exports__","render"],"sourceRoot":""}
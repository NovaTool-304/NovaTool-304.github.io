{"version":3,"file":"js/297.523a2bdc.js","mappings":"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","sources":["webpack://novatool_claude/./src/components/NmeaCEPCalc.vue","webpack://novatool_claude/./src/components/NmeaCEPCalc.vue?6bba"],"sourcesContent":["<template>\n   <div class=\"container\">\n    <h1 class=\"section-title\">\n        <span class=\"section-icon\">üìä</span>\n        NMEA CEP Í≥ÑÏÇ∞Í∏∞\n    </h1>\n    <div class=\"section-card\">      \n      <label class=\"file-upload-button\">\n        <span class=\"file-upload-text\">ÌååÏùº ÏÑ†ÌÉù</span>\n        <input type=\"file\" accept=\".txt,.log\" @change=\"handleFileUpload\" class=\"file-input\" />\n      </label>\n      <span v-if=\"selectedFileName\" class=\"selected-filename\"> {{ selectedFileName }}</span>\n    </div>\n\n    <h2 class=\"font-semibold\">üìä ÏúÑÏπò Îç∞Ïù¥ÌÑ∞</h2>\n    <transition name=\"fade\">      \n      <div v-if=\"points.length\" class=\"section-card\">\n        <div class=\"scrollable-container\">\n          <table class=\"data-table\">\n            <thead>\n              <tr class=\"header-row\">\n                <th class=\"header-cell\">#</th>\n                <th class=\"header-cell\">ÏúÑÎèÑ</th>\n                <th class=\"header-cell\">Í≤ΩÎèÑ</th>\n                <th class=\"header-cell\">Í±∞Î¶¨ (m)</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(p, i) in points\" :key=\"i\" class=\"data-row\">\n                <td class=\"data-cell\">{{ i + 1 }}</td>\n                <td class=\"data-cell\">{{ p.lat.toFixed(6) }}</td>\n                <td class=\"data-cell\">{{ p.lon.toFixed(6) }}</td>\n                <td class=\"data-cell\">{{ p.dist.toFixed(3) }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div v-else class=\"empty-state\">\n        ÌååÏùºÏùÑ ÏóÖÎ°úÎìúÌïòÎ©¥ Î∂ÑÏÑù Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÌëúÏãúÎê©ÎãàÎã§.\n      </div>\n    </transition>\n  \n    <h2 class=\"mt-6 font-semibold\">üìà Í∑∏ÎûòÌîÑ </h2>\n    <transition name=\"fade\">  \n      <div v-if=\"points.length\">           \n        <canvas ref=\"chartRef\"></canvas>        \n      </div>\n      <div v-else class=\"empty-state\">\n        ÌååÏùºÏùÑ ÏóÖÎ°úÎìúÌïòÎ©¥ Î∂ÑÏÑù Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÌëúÏãúÎê©ÎãàÎã§.\n      </div>\n    </transition>\n\n    <h2 class=\"mt-6 font-semibold\">üìå ÌÜµÍ≥Ñ</h2>\n    <transition name=\"fade\">  \n      <div v-if=\"points.length\">\n        <table class=\"stats-table\">\n          <thead >\n            <tr>\n              <th>ITEMS</th> \n              <th>CEP50</th>            \n              <th>CEP68</th>\n              <th>CEP95</th>\n              <th>CEP99</th>\n              <th>ÏµúÏÜå Í±∞Î¶¨</th>            \n              <th>ÏµúÎåÄ Í±∞Î¶¨</th>\n              <th>ÌèâÍ∑† Í±∞Î¶¨</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>PACC_3D</td>\n              <td>{{ accuracyTypes.pacc_3d.cep50.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.cep68.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.cep95.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.cep99.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.min.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.max.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_3d.avg.toFixed(3) }} m</td>\n            </tr>\n            <tr>\n              <td>PACC_H</td>\n              <td>{{ accuracyTypes.pacc_h.cep50.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.cep68.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.cep95.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.cep99.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.min.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.max.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_h.avg.toFixed(3) }} m</td>\n            </tr><tr>\n              <td>PACC_V</td>\n              <td>{{ accuracyTypes.pacc_v.cep50.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.cep68.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.cep95.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.cep99.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.min.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.max.toFixed(3) }} m</td>\n              <td>{{ accuracyTypes.pacc_v.avg.toFixed(3) }} m</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div v-else class=\"empty-state\">\n        ÌååÏùºÏùÑ ÏóÖÎ°úÎìúÌïòÎ©¥ Î∂ÑÏÑù Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÌëúÏãúÎê©ÎãàÎã§.\n      </div>\n    </transition>\n  </div>\n</template>\n  \n<script setup>\n  import { ref, nextTick } from 'vue'\n  import { Chart, ScatterController, LinearScale, PointElement, Title } from 'chart.js'\n  \n  Chart.register(ScatterController, LinearScale, PointElement, Title)\n  \n  const points = ref([])\n  const accuracyTypes = ref({\n  pacc_3d: { cep50: 0, cep68: 0, cep95: 0, cep99: 0, min: 0, max: 0, avg: 0 },\n  pacc_h: { cep50: 0, cep68: 0, cep95: 0, cep99: 0, min: 0, max: 0, avg: 0 },\n  pacc_v: { cep50: 0, cep68: 0, cep95: 0, cep99: 0, min: 0, max: 0, avg: 0 }\n})\n  const center = ref({ lat: 0, lon: 0 })\n  const cep50 = ref(0)\n  const cep68 = ref(0)\n  const cep95 = ref(0)\n  const cep99 = ref(0)\n  // const minDist = ref(0)\n  // const maxDist = ref(0)\n  // const avgDist = ref(0)\n  const chartRef = ref()\n  let chartInstance = null\n  const selectedFileName = ref('')\n  \n  function handleFileUpload(event) {\n    const file = event.target.files[0]\n    if (!file) return\n    selectedFileName.value = file.name\n    const reader = new FileReader()\n    reader.onload = () => {\n        // nul Î¨∏Ïûê Ï†úÍ±∞ ÌõÑ ÌååÏã± ÏßÑÌñâ\n        const cleanedText = reader.result.replace(/\\0/g, '')\n        parseNmeaAndCalculateCep(cleanedText)\n    }\n    reader.readAsText(file)\n  }\n  \n  function calculate3DDistance(p1, p2) {\n    const h_dist = haversine(p1.lat, p1.lon, p2.lat, p2.lon)\n    const v_dist = Math.abs(p2.alt - p1.alt)\n    return Math.sqrt(h_dist * h_dist + v_dist * v_dist)\n  }\n\n  function calculateHDistance(p1, p2) {\n    return haversine(p1.lat, p1.lon, p2.lat, p2.lon)\n  }\n\n  function calculateVDistance(p1, p2) {\n    return Math.abs(p2.alt - p1.alt)\n  }\n\n  function calculateAccuracyStats(distances) {\n    // Ïù¥ÏÉÅÏπò Ï†úÍ±∞ (ÌèâÍ∑†ÏóêÏÑú 3 ÌëúÏ§ÄÌé∏Ï∞® Ïù¥ÏÉÅ Î≤óÏñ¥ÎÇú Í∞í)\n    const mean = distances.reduce((sum, val) => sum + val, 0) / distances.length\n    const stdDev = Math.sqrt(distances.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / distances.length)\n    const filteredDistances = distances.filter(d => Math.abs(d - mean) <= 3 * stdDev)\n    \n    const sorted = filteredDistances.sort((a, b) => a - b)\n    const len = sorted.length\n    \n    // Ï†ïÌôïÌïú Ïù∏Îç±Ïä§ Í≥ÑÏÇ∞\n    const idx50 = Math.round(len * 0.50) - 1\n    const idx68 = Math.round(len * 0.68) - 1\n    const idx95 = Math.round(len * 0.95) - 1\n    const idx99 = Math.round(len * 0.99) - 1\n    \n    return {\n        cep50: sorted[idx50] || 0,\n        cep68: sorted[idx68] || 0,\n        cep95: sorted[idx95] || 0,\n        cep99: sorted[idx99] || 0,\n        min: sorted[0] || 0,\n        max: sorted[sorted.length - 1] || 0,\n        avg: sorted.reduce((sum, v) => sum + v, 0) / len || 0\n    }\n}\n\nfunction parseNmeaAndCalculateCep(text) {\n    const lines = text.split(/\\r?\\n/)\n    const latlon = []\n    let alt = 0\n\n    for (const line of lines) {\n        let latRaw = '', latDir = '', lonRaw = '', lonDir = ''\n\n        if (line.startsWith('$GNGGA') || line.startsWith('$GPGGA')) {\n            const parts = line.split(',')\n            latRaw = parts[2]\n            latDir = parts[3]\n            lonRaw = parts[4]\n            lonDir = parts[5]\n            alt = !isNaN(parseFloat(parts[9])) ? parseFloat(parts[9]) : 0\n        } else if (line.startsWith('$GNRMC') || line.startsWith('$GPRMC')) {\n            const parts = line.split(',')\n            latRaw = parts[3]\n            latDir = parts[4]\n            lonRaw = parts[5]\n            lonDir = parts[6]\n        }\n\n        const lat = convertToDecimal(latRaw, latDir)\n        const lon = convertToDecimal(lonRaw, lonDir)\n\n        if (!isNaN(lat) && !isNaN(lon)) {\n            latlon.push({ lat, lon, alt })\n        }\n    }\n\n    if (latlon.length === 0) return\n\n    const avgLat = latlon.reduce((s, p) => s + p.lat, 0) / latlon.length\n    const avgLon = latlon.reduce((s, p) => s + p.lon, 0) / latlon.length\n    const avgAlt = latlon.reduce((s, p) => s + p.alt, 0) / latlon.length\n    center.value = { lat: avgLat, lon: avgLon, alt: avgAlt }\n\n    points.value = latlon.map(p => ({\n        lat: p.lat,\n        lon: p.lon,\n        alt: p.alt,\n        dist: haversine(avgLat, avgLon, p.lat, p.lon),\n        dist3d: calculate3DDistance(center.value, p),\n        distH: calculateHDistance(center.value, p),\n        distV: calculateVDistance(center.value, p)\n    }))\n\n    accuracyTypes.value.pacc_3d = calculateAccuracyStats(points.value.map(p => p.dist3d))\n    accuracyTypes.value.pacc_h = calculateAccuracyStats(points.value.map(p => p.distH))\n    accuracyTypes.value.pacc_v = calculateAccuracyStats(points.value.map(p => p.distV))\n\n    cep50.value = accuracyTypes.value.pacc_3d.cep50\n    cep68.value = accuracyTypes.value.pacc_3d.cep68\n    cep95.value = accuracyTypes.value.pacc_3d.cep95\n    cep99.value = accuracyTypes.value.pacc_3d.cep99\n\n    if (points.value.length > 0) {\n        nextTick(() => drawChart())\n    }\n}\n  \n  function convertToDecimal(raw, dir) {\n    const deg = parseFloat(raw.slice(0, dir === 'N' || dir === 'S' ? 2 : 3))\n    const min = parseFloat(raw.slice(dir === 'N' || dir === 'S' ? 2 : 3))\n    let dec = deg + min / 60\n    if (dir === 'S' || dir === 'W') dec *= -1\n    return dec\n  }\n  \n  function haversine(lat1, lon1, lat2, lon2) {\n    const R = 6371000\n    const toRad = deg => deg * Math.PI / 180\n    const dLat = toRad(lat2 - lat1)\n    const dLon = toRad(lon2 - lon1)\n    const a = Math.sin(dLat / 2) ** 2 +\n              Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n              Math.sin(dLon / 2) ** 2\n    return 2 * R * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  }\n  \n\n  function drawChart() {\n    if (!chartRef.value) return\n    if (chartInstance) chartInstance.destroy()\n\n  const data = points.value.map(p => ({\n    x: haversine(center.value.lat, center.value.lon, center.value.lat, p.lon) * (p.lon > center.value.lon ? 1 : -1),\n    y: haversine(center.value.lat, center.value.lon, p.lat, center.value.lon) * (p.lat > center.value.lat ? 1 : -1)\n  }))\n\n  // Find max range for square aspect ratio\n  const maxRange = Math.max(\n    ...data.map(p => Math.abs(p.x)),\n    ...data.map(p => Math.abs(p.y))\n  ) * 1.2 // Add 20% padding\n\n  chartInstance = new Chart(chartRef.value, {\n    type: 'scatter',\n    data: {\n      datasets: [{\n        label: 'Position Data',\n        data,\n        backgroundColor: 'rgba(0, 0, 255, 0.6)',\n        pointRadius: 4\n      }]\n    },\n    options: {\n      aspectRatio: 1, // Make it square\n      responsive: true,\n      scales: {\n        x: {\n          title: { display: true, text: 'East-West (meters)' },\n          min: -maxRange,\n          max: maxRange,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            drawTicks: true,\n            drawOnChartArea: true\n          },\n          ticks: {\n            stepSize: maxRange/5\n          }\n        },\n        y: {\n          title: { display: true, text: 'North-South (meters)' },\n          min: -maxRange,\n          max: maxRange,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            drawTicks: true,\n            drawOnChartArea: true\n          },\n          ticks: {\n            stepSize: maxRange/5\n          }\n        }\n      },\n      plugins: {\n        title: { \n          display: true, \n          text: 'Position Scatter Plot with CEP Circles',\n          padding: 20\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        cepCircles: {\n          radii: [\n            {value: cep50.value, label: 'CEP50'},\n            {value: cep68.value, label: 'CEP68'},\n            {value: cep95.value, label: 'CEP95'},\n            {value: cep99.value, label: 'CEP99'}\n          ]\n        }\n      }\n    },\n    plugins: [{\n      id: 'cepCircles',\n      beforeDatasetsDraw(chart, args, pluginOptions) {\n        const { ctx, scales } = chart\n        const centerX = scales.x.getPixelForValue(0)\n        const centerY = scales.y.getPixelForValue(0)\n        const radii = pluginOptions.radii || []\n        const colors = ['red', 'blue', 'orange', 'green']\n\n        ctx.save()\n        radii.forEach((r, i) => {\n          const radiusInPixels = Math.abs(scales.x.getPixelForValue(r.value) - centerX)\n          \n          // Draw circle\n          ctx.beginPath()\n          ctx.arc(centerX, centerY, radiusInPixels, 0, 2 * Math.PI)\n          //ctx.fillStyle = colors[i]\n          //ctx.fill()\n          ctx.strokeStyle = colors[i].replace('0.2', '1.0')\n          ctx.lineWidth = 2\n          ctx.stroke()\n          \n          // 45ÎèÑ ÏúÑÏπòÏóê Î†àÏù¥Î∏î Ï∂îÍ∞Ä\n          const angle = Math.PI / 4  // 45ÎèÑ\n          const labelX = centerX + (radiusInPixels * Math.cos(angle))\n          const labelY = centerY - (radiusInPixels * Math.sin(angle))\n          \n          ctx.fillStyle = colors[i].replace('0.2', '1.0')\n          ctx.font = '12px Arial'\n          ctx.textAlign = 'left'\n          ctx.fillText(`${r.label}: ${r.value.toFixed(2)}m`, labelX, labelY)\n        })\n        ctx.restore()\n      }\n    }]\n  })\n}\n\n</script>\n  \n<style scoped>\n.container {\n  max-width: 72rem;\n  margin: 0 auto;\n  padding: 1.5rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n}\n\n.section-card {\n  background-color: #f9fafb;\n  padding: 1.5rem;\n  border-radius: 0.75rem;\n  margin-bottom: 2rem;\n}\n\n.section-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.section-icon {\n  color: #3b82f6;\n}\n\n.data-table {\n  width: 100%;\n  font-size: 0.875rem;\n  background-color: white;\n  border-radius: 0.5rem;\n}\n\n.header-row {\n  background-color: #f3f4f6;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.header-cell {\n  padding: 0.75rem 1.5rem;\n  text-align: left;\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.data-row {\n  transition: background-color 0.15s ease-in-out;\n}\n\n.data-row:nth-child(even) {\n  background-color: #f9fafb;\n}\n\n.data-row:hover {\n  background-color: #eff6ff;\n}\n\n.data-cell {\n  padding: 1rem 1.5rem;\n  white-space: nowrap;\n  color: #374151;\n  border-bottom: 1px solid #f3f4f6;\n}\n\n.scrollable-container {\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  height: 300px;\n  overflow-y: auto;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.scrollable-container::-webkit-scrollbar {\n  width: 6px;\n}\n\n.scrollable-container::-webkit-scrollbar-track {\n  background-color: #f3f4f6;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb {\n  background-color: #93c5fd;\n  border-radius: 9999px;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb:hover {\n  background-color: #60a5fa;\n}\n\n.file-upload-button {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background-color: #dbeafe;\n  border-radius: 0.5rem;\n  cursor: pointer;\n}\n\n.file-upload-button:hover {\n  background-color: #bfdbfe;\n  transition: background-color 0.2s;\n}\n\n.file-upload-text {\n  color: #1d4ed8;\n  font-weight: 500;\n}\n\n.file-input {\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.empty-state {\n  text-align: center;\n  color: #6b7280;\n  margin-top: 2rem;\n  padding: 2rem;\n  background-color: #f9fafb;\n  border-radius: 0.5rem;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.stats-table {\n  width: 100%;\n  margin: 1rem 0;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.stats-table thead {\n  background-color: #f3f4f6;\n}\n\n.stats-table th {\n  padding: 0.75rem 1rem;\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  color: #4b5563;\n  border: 1px solid #e5e7eb;\n}\n\n.stats-table td {\n  padding: 0.75rem 1rem;\n  font-size: 0.875rem;\n  color: #374151;\n  border: 1px solid #e5e7eb;\n  transition: background-color 0.15s;\n}\n\n.stats-table tbody tr:hover {\n  background-color: #f9fafb;\n}\n\n.stats-table tbody tr:first-child td {\n  background-color: #dbeafe;\n  color: #1e40af;\n}\n\n.selected-filename {\n  margin-left: 1rem;\n  padding: 0.5rem;\n  color: #1d4ed8;\n  font-size: 0.875rem;\n  background-color: #eff6ff;\n  border-radius: 0.375rem;\n  display: inline-block;\n}\n</style>\n\n  ","import script from \"./NmeaCEPCalc.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NmeaCEPCalc.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NmeaCEPCalc.vue?vue&type=style&index=0&id=2f279ee2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2f279ee2\"]])\n\nexport default __exports__"],"names":["Chart","register","ScatterController","LinearScale","PointElement","Title","points","ref","accuracyTypes","pacc_3d","cep50","cep68","cep95","cep99","min","max","avg","pacc_h","pacc_v","center","lat","lon","chartRef","chartInstance","selectedFileName","handleFileUpload","event","file","target","files","value","name","reader","FileReader","onload","cleanedText","result","replace","parseNmeaAndCalculateCep","readAsText","calculate3DDistance","p1","p2","h_dist","haversine","v_dist","Math","abs","alt","sqrt","calculateHDistance","calculateVDistance","calculateAccuracyStats","distances","mean","reduce","sum","val","length","stdDev","pow","filteredDistances","filter","d","sorted","sort","a","b","len","idx50","round","idx68","idx95","idx99","v","text","lines","split","latlon","line","latRaw","latDir","lonRaw","lonDir","startsWith","parts","isNaN","parseFloat","convertToDecimal","push","avgLat","s","p","avgLon","avgAlt","map","dist","dist3d","distH","distV","nextTick","drawChart","raw","dir","deg","slice","dec","lat1","lon1","lat2","lon2","R","toRad","PI","dLat","dLon","sin","cos","atan2","destroy","data","x","y","maxRange","type","datasets","label","backgroundColor","pointRadius","options","aspectRatio","responsive","scales","title","display","grid","color","drawTicks","drawOnChartArea","ticks","stepSize","plugins","padding","legend","position","cepCircles","radii","id","beforeDatasetsDraw","chart","args","pluginOptions","ctx","centerX","getPixelForValue","centerY","colors","save","forEach","r","i","radiusInPixels","beginPath","arc","strokeStyle","lineWidth","stroke","angle","labelX","labelY","fillStyle","font","textAlign","fillText","toFixed","restore","__exports__"],"sourceRoot":""}
{"version":3,"file":"js/582.3e863a89.js","mappings":"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","sources":["webpack://novatool_claude/./node_modules/core-js/internals/to-string.js","webpack://novatool_claude/./src/components/ImageMap.vue","webpack://novatool_claude/./src/components/ImageMap.vue?99e2","webpack://novatool_claude/./node_modules/core-js/internals/validate-arguments-length.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://novatool_claude/./node_modules/core-js/modules/web.url-search-params.size.js"],"sourcesContent":["'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","<template>\n  \n  <div class=\"page-container\">\n    <div class=\"import-controls-container\">\n      <div class=\"controls-row\">\n        <div class=\"import-controls\">\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\".json,.h\" @change=\"importAreaInfo\" class=\"file-input\">\n            <span class=\"material-icons\">upload_file</span>\n            Import\n          </label>\n          <label class=\"import-btn\" v-if=\"imagePath\">\n            <input type=\"file\" \n              webkitdirectory \n              directory \n              @change=\"importImages\" \n              class=\"file-input\">\n            <span class=\"material-icons\">drive_folder_upload</span>\n            Load Images\n          </label>\n        </div>\n        <div class=\"image-selector\">\n          <!-- <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\"> -->\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\"image/*,.nvp,.alpha\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\">\n            <span class=\"material-icons\">file_open</span>\n            Select BG\n          </label>\n          <!-- <button @click=\"triggerFileInput\" class=\"select-image-btn\">\n            Select Image\n          </button> -->\n          <label class=\"switch\" v-if=\"selectedImage\">\n            <span class=\"switch-label\">Edit Mode</span>\n            <input type=\"checkbox\" v-model=\"isEditing\">\n            <span class=\"slider round\"></span>        \n          </label>\n          \n        </div>\n      </div>\n    </div>\n    \n    <span class=\"file-info\" v-if=\"BGName\">\n      <span class=\"material-icons\">description</span>\n      {{ BGName }}\n    </span>\n    <!-- Color picker for NVP/ALPHA files -->\n    <div v-if=\"isNvpFile\" class=\"color-picker-container\">\n      <span class=\"color-picker-label\">Visualization Color:</span>\n      <input type=\"color\" v-model=\"nvpColor\" @change=\"reprocessNvpFile\" class=\"color-picker\">\n      <button @click=\"reprocessNvpFile\" class=\"color-apply-btn\">Apply</button>\n    </div>\n    <p> </p>\n    <div class=\"image-section\" v-if=\"BGName\">\n      <div class=\"image-container\">          \n        \n        <div v-if=\"selectedImage\" class=\"image-display\">\n          <img \n            :src=\"selectedImage\" \n            useMap=\"#workMap\" \n            class=\"image-map\"\n            @load=\"initializeCanvas\"\n            @click=\"handleImageClick\"\n            @mousedown.prevent=\"startDrawing\"\n            @mousemove.prevent=\"drawing\"\n            @mouseup.prevent=\"endDrawing\"\n            draggable=\"false\"\n          >\n          <map name=\"workMap\" v-if=\"!isEditing\">\n            <area v-for=\"area in areas\"\n                  :key=\"area.id\"\n                  :shape=\"area.shape\"\n                  :coords=\"area.coords\"\n                  :href=\"area.href\"\n                  :alt=\"area.alt\"\n                  @click.prevent\n                  @mouseover=\"highlightArea(area.id)\"\n                  @mouseout=\"removeHighlight()\">\n          </map>\n\n          <!-- 영역 배경 이미지 추가 -->\n          <div v-for=\"area in areas\" \n              :key=\"'bg-'+area.id\" \n              class=\"area-background\"\n              v-show=\"area.visible && area.imageUrl\"\n              :style=\"getAreaBackgroundStyle(area)\">\n            <img v-if=\"area.imageUrl\" :src=\"area.imageUrl\" alt=\"Area background\">\n          </div>\n\n          <canvas \n            ref=\"highlightCanvas\" \n            class=\"highlight-canvas\"\n            @click=\"handleCanvasClick($event)\"\n            :style=\"{ cursor: isEditing ? 'pointer' : 'default' }\">\n          </canvas>\n          \n          <!-- Area Numbers -->\n          <div v-for=\"area in areas\" \n              :key=\"area.id\" \n              class=\"area-number\"\n              :class=\"{ 'selected': selectedAreaId === area.id }\"\n              \n              :style=\"getAreaNumberStyle(area)\">\n            {{ area.id }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Modern Table for Area Coordinates -->\n      <div v-if=\"areas.length > 0\" class=\"area-table-container\">\n        <h3>Area Info</h3>\n        <div class=\"import-controls\">\n          <div class=\"image-path-input\">\n            <input \n              type=\"text\" \n              id=\"imagePath\" \n              v-model=\"imagePath\" \n              placeholder=\"Enter image path\"\n              class=\"path-input\"\n            >\n          </div>\n          \n        </div>\n\n        <table class=\"modern-table\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>X</th>\n              <th>Y</th>\n              <th>Width</th>\n              <th>Height</th>\n              <th>Image</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"area in areas\" :key=\"area.id\" :class=\"{ 'editing-row': isEditingArea(area.id) }\">\n              <td class=\"area-id\">{{ area.id }}</td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).x\"                \n                  @input=\"updateCoord(area.id, 'x', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).y\"\n                  @input=\"updateCoord(area.id, 'y', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).width\"\n                  @input=\"updateCoord(area.id, 'width', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its width' : ''\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).height\"\n                  @input=\"updateCoord(area.id, 'height', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its height' : ''\"\n                >\n              </td>\n              <td>\n                <div class=\"file-upload-container\">\n                  <label class=\"custom-file-upload\" :title=\"'Select an image for ' + area.id\">\n                    <input \n                      type=\"file\" \n                      accept=\"image/*\"\n                      @change=\"handleAreaImageUpload($event, area.id)\"\n                      class=\"image-upload\"\n                    >\n                    <span class=\"material-icons\">image</span>\n                  </label>\n                  <span class=\"selected-filename\" v-if=\"areaFilenames[area.id]\">\n                    {{ areaFilenames[area.id] }}\n                  </span>\n                </div>\n                <!-- <img \n                  v-if=\"area.imageUrl\" \n                  :src=\"area.imageUrl\" \n                  class=\"area-thumbnail\"\n                  alt=\"Area image\"\n                > -->\n              </td>\n              <td class=\"actions-cell\">\n                <button @click=\"toggleVisibility(area.id)\" class=\"action-btn visibility\" :title=\"area.visible ? 'Hide' : 'Show'\">\n                  <span class=\"material-icons\">{{ area.visible ? 'visibility' : 'visibility_off' }}</span>\n                </button>\n                <button @click=\"deleteArea(area.id)\" class=\"action-btn delete\" :title=\"'Remove area'\">\n                  <span class=\"material-icons\">clear</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p ></p>\n\n        <div class=\"export-buttons\">\n          <button @click=\"exportAsJson\" class=\"export-btn\">Save to JSON </button>\n          <button @click=\"exportAsCStruct\" class=\"export-btn\">Save to C Struct</button>\n        </div>\n      </div>\n\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageMap',\n  data() {\n    return {\n      selectedImage: null,\n      areas: [],\n      areaFilenames: {}, // 영역별 실제 파일명 저장\n      isEditing: true,\n      isDrawing: false,\n      startX: 0,\n      startY: 0,\n      currentArea: null,\n      editingAreaId: null,\n      isDragging: false,\n      selectedAreaId: null,\n      dragStartX: 0,\n      dragStartY: 0,\n      imagePath: '',\n      BGName: '',\n      BGSize: '',\n      isNvpFile: false,\n      nvpColor: '#0000FF', // Default blue color\n      nvpFileData: null // Store the NVP file data for reprocessing\n    }\n  },\n  methods: {\n    toggleVisibility(areaId) {\n      const area = this.areas.find(a => a.id === areaId);\n      if (area) {\n        area.visible = !area.visible;\n        this.drawSavedAreas();\n      }\n    },\n\n    handleCanvasClick(event) {\n      if (!this.isEditing) return;\n      \n      const rect = event.target.getBoundingClientRect();\n      const scale = event.target.width / event.target.clientWidth;\n      const x = (event.clientX - rect.left) * scale;\n      const y = (event.clientY - rect.top) * scale;\n\n      // 클릭한 위치에 있는 영역 찾기\n      const clickedArea = this.areas.find(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(Number);\n        return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n      });\n\n      if (clickedArea) {\n        this.selectedAreaId = clickedArea.id;\n        this.highlightArea(clickedArea.id);\n      } else {\n        this.selectedAreaId = null;\n        this.drawSavedAreas();\n      }\n    },\n    selectArea(areaId) {\n      this.selectedAreaId = areaId;\n    },\n    \n    // 이미지 클릭 시 선택 해제\n    handleImageClick(event) {\n      if (event.target.classList.contains('image-map')) {\n        this.selectedAreaId = null;\n      }\n    },\n\n    importImages(event) {\n      const files = Array.from(event.target.files);\n      \n      // Create a map of filenames to their data URLs\n      const imageMap = {};\n      \n      files.forEach(file => {\n        if (file.type.startsWith('image/')) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            imageMap[file.name] = e.target.result;\n            \n            // Set background image if filename matches\n            if (file.name === this.BGName) {\n              this.selectedImage = e.target.result;\n            }\n            \n            // Set area images if filename matches\n            this.areas.forEach(area => {\n              if (this.areaFilenames[area.id] === file.name) {\n                area.imageUrl = e.target.result;\n              }\n            });\n          };\n          reader.readAsDataURL(file);\n        }\n      });\n    },\n\n    importAreaInfo(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = async(e) => {\n        const content = e.target.result;\n        \n        if (file.name.endsWith('.json')) {\n          await this.importFromJson(content);\n        } else if (file.name.endsWith('.h')) {\n          await this.importFromCStruct(content);\n        }\n\n        \n      };\n      reader.readAsText(file);\n    },\n\n    clearAllAreas() {\n      this.areas = [];\n      this.areaFilenames = {}; // 관련 파일명 정보도 함께 지우기\n      //this.drawSavedAreas(); // 캔버스 다시 그리기\n    },\n\n    importFromJson(content) {\n      try {\n        const data = JSON.parse(content);\n\n        // Set image path if available\n        this.imagePath = data.imagePath || '';\n        this.BGName = data.BGName || '';\n\n        // Check if data is in the new format (with imagePath) or old format (just array of areas)\n        let areasData;\n\n        if (Array.isArray(data)) {\n          // Old format - direct array of areas\n          areasData = data;\n          this.imagePath = ''; // Reset image path\n        } else if (data && typeof data === 'object') {\n          // New format with imagePath\n          this.imagePath = data.imagePath || '';\n          \n          // Check if areas property exists and is an array\n          if (data.areas && Array.isArray(data.areas)) {\n            areasData = data.areas;\n          } else {\n            // Try to use the whole object as area data\n            areasData = [data];\n          }\n        } else {\n          throw new Error('Invalid JSON structure');\n        }\n\n        this.clearAllAreas();\n        \n        // Process the areas data\n        this.areas = areasData.map(item => {\n          // Make sure coordinates exist\n          if (!item.coordinates) {\n            console.error('Missing coordinates in area:', item);\n            return null;\n          }\n          \n          return {\n            id: item.id || 0,\n            shape: 'rect',\n            coords: `${item.coordinates.x},${item.coordinates.y},${item.coordinates.x + item.coordinates.width},${item.coordinates.y + item.coordinates.height}`,\n            href: '#',\n            alt: `Area ${item.id || 0}`,\n            imageUrl: null,\n            visible: item.visible !== undefined ? item.visible : true\n          };\n        }).filter(area => area !== null); // Remove any null entries\n        \n        // 파일명 정보 복원\n        this.areaFilenames = {};\n        areasData.forEach(item => {\n          if (item.id && item.filename) {\n            this.areaFilenames[item.id] = item.filename;\n          }\n        });\n\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage)\n           {\n            this.drawSavedAreas();\n          }\n        });\n        \n        //console.log('Successfully imported JSON data:', { areas: this.areas, imagePath: this.imagePath });\n      } catch (error) {\n        console.error('Error importing JSON:', error);\n        alert('The JSON file format is not correct:' + error.message);\n      }\n    },\n\n    importFromCStruct(content) {\n      try {\n        // Extract image path if available\n        const imagePathMatch = content.match(/#define IMAGE_PATH \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ Image Path: (.+)/);\n        if (imagePathMatch && imagePathMatch[1]) {\n          this.imagePath = imagePathMatch[1];\n        }\n\n        const BGNameMatch = content.match(/#define BGName \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ BG Name: (.+)/);\n        if (BGNameMatch && BGNameMatch[1]) {\n          this.BGName = BGNameMatch[1];\n        }\n\n        // C struct 파싱을 위한 정규식 수정\n        const areaRegex = /{\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*\"([^\"]*)\"\\s*,\\s*(\\d+)\\s*}/g;\n        //const areas = [];\n        let match;\n\n        this.clearAllAreas();\n\n        while ((match = areaRegex.exec(content)) !== null) {\n          const id = parseInt(match[1]);\n          const x = parseInt(match[2]);\n          const y = parseInt(match[3]);\n          const width = parseInt(match[4]);\n          const height = parseInt(match[5]);\n          const filename = match[6];\n          const visible = match[7] === \"1\"; // 1이면 true, 0이면 false\n          \n          this.areas.push({\n            id: id,\n            shape: 'rect',\n            coords: `${x},${y},${x + width},${y + height}`,\n            href: '#',\n            alt: `Area ${id}`,\n            imageUrl: null,\n            visible: visible\n          });          \n          \n          // 파일명 정보 저장\n          if (filename) {\n            this.areaFilenames[id] = filename;\n          }\n\n          console.log('Imported area:', { id, x, y, width, height, filename, visible });\n        }\n\n        // 영역이 하나도 매칭되지 않았을 경우 로그 출력\n        if (this.areas.length === 0) {\n          console.error('No areas found in the C struct file. Content:', content);\n          alert('No valid areas found in the C struct file.');\n          return;\n        }\n\n        // 캔버스가 준비되었을 때만 drawSavedAreas 호출\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage) {\n            this.drawSavedAreas();\n          }\n        });\n        console.log('Successfully imported C struct data:', this.areas);\n      } catch (error) {\n        console.error('Error importing C struct:', error);\n        alert('The C Struct file format is not correct: ' + error.message);\n      }\n    },\n    \n    exportAsJson() {      \n      const exportData = {\n        imagePath: this.imagePath,\n        BGName: this.BGName,\n          areas: this.areas.map(area => ({\n          id: area.id,\n          coordinates: this.getAreaCoords(area),\n          filename: this.areaFilenames[area.id] || '',\n          visible: area.visible\n        }))\n      };\n            \n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      this.downloadFile(blob, 'image_map_areas.json');\n    },\n  \n    exportAsCStruct() {\n      let structContent = '// Image Path: ' + this.imagePath + '\\n';\n      structContent += '// BG Name: ' + this.BGName + '\\n\\n';\n      structContent += 'typedef struct {\\n';\n      structContent += '    int id;\\n';\n      structContent += '    int x;\\n';\n      structContent += '    int y;\\n';\n      structContent += '    int width;\\n';\n      structContent += '    int height;\\n';\n      structContent += '    char filename[256];\\n';\n      structContent += '    int visible;\\n';\n      structContent += '} Area;\\n\\n';\n      \n      structContent += '#define IMAGE_PATH \"' + this.imagePath + '\"\\n';\n      structContent += '#define BGName \"' + this.BGName + '\"\\n\\n';\n      structContent += 'Area areas[] = {\\n';\n      this.areas.forEach(area => {\n        const coords = this.getAreaCoords(area);\n        const filename = this.areaFilenames[area.id] || '';\n        structContent += `    {${area.id}, ${coords.x}, ${coords.y}, ${coords.width}, ${coords.height}, \"${filename}\", ${area.visible ? 1 : 0}},\\n`;\n      });\n      structContent += '};\\n';\n      \n      const blob = new Blob([structContent], { type: 'text/plain' });\n      this.downloadFile(blob, 'image_map_areas.h');\n    },\n    \n    downloadFile(blob, filename) {\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n\n    getAreaBackgroundStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        position: 'absolute',\n        left: `${coords.x}px`,\n        top: `${coords.y}px`,\n        width: `${coords.width}px`,\n        height: `${coords.height}px`,\n        overflow: 'hidden'\n      }\n    },\n\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n\n    formatFileSize(bytes){\n      const units = ['B', 'KB', 'MB', 'GB']\n      let size = bytes\n      let unitIndex = 0\n      \n      while (size >= 1024 && unitIndex < units.length - 1) {\n        size /= 1024\n        unitIndex++\n      }\n      \n      return `${size.toFixed(1)} ${units[unitIndex]}`\n    },\n\n    handleImageUpload(event) {\n      const file = event.target.files[0]\n      if (!file) return\n      \n      this.BGName = file.name\n      this.BGSize = this.formatFileSize(file.size)\n      \n      // Handle .nvp custom format\n      if (file.name.endsWith('.nvp') || file.name.endsWith('.alpha')) {\n        this.isNvpFile = true\n        this.handleNvpFile(file)\n      } \n      // Handle regular image files\n      else if (file.type.startsWith('image/')) {\n        this.isNvpFile = false\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          this.selectedImage = e.target.result\n          this.$emit('image-selected', file)\n        }\n        reader.readAsDataURL(file)\n        this.isEditing = true\n      }\n    },\n    handleNvpFile(file) {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const buffer = e.target.result\n        // Store the buffer for later reprocessing when color changes\n        this.nvpFileData = buffer\n        this.isNvpFile = true\n        \n        this.processNvpData(buffer)\n      }\n      reader.readAsArrayBuffer(file)  // Read as ArrayBuffer to access binary data\n    },\n\n    reprocessNvpFile() {\n      if (this.nvpFileData) {\n        this.processNvpData(this.nvpFileData)\n      }\n    },\n\n    processNvpData(buffer) {\n      const dataView = new DataView(buffer)\n      \n      // Read width and height from first 4 bytes (2 bytes each)\n      const width = dataView.getUint16(0, true)  // true for little-endian\n      const height = dataView.getUint16(2, true)\n      \n      // Create a canvas to render the image data\n      const canvas = document.createElement('canvas')\n      canvas.width = width\n      canvas.height = height\n      const ctx = canvas.getContext('2d')\n      \n      // Create transparent background\n      ctx.clearRect(0, 0, width, height)\n      \n      // Create image data\n      const imageData = ctx.createImageData(width, height)\n      \n      // Parse the selected color to RGB components\n      const colorHex = this.nvpColor.replace('#', '')\n      const r = parseInt(colorHex.substring(0, 2), 16)\n      const g = parseInt(colorHex.substring(2, 4), 16)\n      const b = parseInt(colorHex.substring(4, 6), 16)\n      \n      // Fill the image data with alpha values from the file\n      // Starting from byte 4 (after width and height)\n      for (let i = 0; i < width * height; i++) {\n        const dataIndex = i * 4  // 4 bytes per pixel (RGBA)\n        const fileIndex = i + 4  // +4 to skip width and height bytes\n        \n        if (fileIndex < buffer.byteLength) {\n          const alphaValue = new Uint8Array(buffer)[fileIndex]\n          \n          // Set RGBA values using the selected color\n          imageData.data[dataIndex] = r  // R\n          imageData.data[dataIndex + 1] = g  // G\n          imageData.data[dataIndex + 2] = b  // B\n          imageData.data[dataIndex + 3] = alphaValue  // A - use alpha from file\n        }\n      }\n      \n      // Put the image data on the canvas\n      ctx.putImageData(imageData, 0, 0)\n      \n      // Convert canvas to data URL and set as selected image\n      this.selectedImage = canvas.toDataURL()\n      this.$emit('image-selected', { name: this.BGName })\n      this.isEditing = true\n    },\n\n    toggleEditMode() {\n      this.isEditing = !this.isEditing\n    },\n    drawSavedAreas() {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.areas.forEach(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n        const width = x2 - x1\n        const height = y2 - y1\n        \n        // 흰색 테두리\n        ctx.strokeStyle = 'white'\n        ctx.lineWidth = 2\n        ctx.setLineDash([])\n        ctx.strokeRect(x1, y1, width, height)\n        \n        // 검은색 점선 테두리\n        ctx.strokeStyle = 'black'\n        ctx.lineWidth = 1\n        ctx.setLineDash([4, 4])\n        ctx.strokeRect(x1, y1, width, height)\n      })\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    startDrawing(event) {\n      if (!this.isEditing) return\n      \n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      this.startX = Math.round((event.clientX - rect.left) * scale)\n      this.startY = Math.round((event.clientY - rect.top) * scale)\n      this.isDrawing = true\n      \n      this.currentArea = {\n        startX: this.startX,\n        startY: this.startY\n      }\n    },\n    drawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const currentX = Math.round((event.clientX - rect.left) * scale)\n      const currentY = Math.round((event.clientY - rect.top) * scale)\n\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.drawSavedAreas()\n      \n      const width = currentX - this.currentArea.startX\n      const height = currentY - this.currentArea.startY\n      \n      // ctx.fillStyle = 'rgba(0, 0, 0, 0.3)'\n      // ctx.fillRect(\n      //   this.currentArea.startX,\n      //   this.currentArea.startY,\n      //   width,\n      //   height\n      // )\n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'\n      ctx.fillRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n  \n      // 이중 테두리 그리기 (흰색과 검은색)\n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      \n      // 검은색 테두리 (점선)\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    handleAreaImageUpload(event, areaId) {\n      const file = event.target.files[0]\n      if (file && file.type.startsWith('image/')) {\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          const area = this.areas.find(a => a.id === areaId)\n          // 이미지 로드 후 원본 크기 가져오기\n          const img = new Image()\n          img.onload = () => {\n            const coords = this.getAreaCoords(area)\n            area.imageUrl = e.target.result\n            area.coords = `${coords.x},${coords.y},${coords.x + img.width},${coords.y + img.height}`\n            this.areaFilenames[areaId] = file.name // 실제 파일명 저장\n            \n            this.drawSavedAreas()\n          }\n          img.src = e.target.result\n        }\n        reader.readAsDataURL(file)\n      }\n    },\n    endDrawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const endX = Math.round((event.clientX - rect.left) * scale)\n      const endY = Math.round((event.clientY - rect.top) * scale)\n\n      if (Math.abs(endX - this.currentArea.startX) < 10 || \n          Math.abs(endY - this.currentArea.startY) < 10) {\n        this.isDrawing = false\n        this.drawSavedAreas()\n        return\n      }\n\n      const newArea = {\n        id: this.areas.length + 1,\n        shape: 'rect',\n        coords: `${this.currentArea.startX},${this.currentArea.startY},${endX},${endY}`,\n        href: '#',\n        alt: `Area ${this.areas.length + 1}`,\n        imageUrl: null, // 이미지 URL 속성 추가\n        visible: true\n      }\n\n      this.areas.push(newArea)\n      this.isDrawing = false\n      this.drawSavedAreas()\n    },\n\n    highlightArea(areaId) {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      \n      this.drawSavedAreas()\n      \n      const area = this.areas.find(a => a.id === areaId)\n      const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n      const width = x2 - x1\n      const height = y2 - y1\n      \n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(0, 255, 0, 0.3)'\n      ctx.fillRect(x1, y1, width, height)\n      \n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.setLineDash([])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      // 검은색 점선 테두리\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n\n    removeHighlight() {\n      this.drawSavedAreas()\n    },\n\n    initializeCanvas() {\n      const img = event.target\n      const canvas = this.$refs.highlightCanvas\n      canvas.width = img.width\n      canvas.height = img.height\n      this.drawSavedAreas()\n    },\n    getAreaCoords(area) {\n      const [x1, y1, x2, y2] = area.coords.split(',').map(Number)\n      return {\n        x: Math.min(x1, x2),\n        y: Math.min(y1, y2),\n        width: Math.abs(x2 - x1),\n        height: Math.abs(y2 - y1)\n      }\n    },\n    getAreaNumberStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        left: `${coords.x}px`,\n        top: `${coords.y}px`\n      }\n    },\n    deleteArea(areaId) {\n      this.areas = this.areas.filter(area => area.id !== areaId)\n      this.drawSavedAreas()\n    },\n    toggleEdit(areaId) {\n      this.editingAreaId = this.editingAreaId === areaId ? null : areaId\n    },\n    isEditingArea(areaId) {\n      return this.editingAreaId === areaId\n    },\n\n    updateCoord(areaId, type, value) {\n        const area = this.areas.find(a => a.id === areaId)\n        const coords = this.getAreaCoords(area)\n        \n        // 입력값이 숫자가 아니거나 음수인 경우 0으로 처리\n        value = (!value || isNaN(value) || value < 0) ? 0 : parseInt(value)\n        \n        switch(type) {\n        case 'x':\n            area.coords = `${value},${coords.y},${value + coords.width},${coords.y + coords.height}`\n            break\n        case 'y':\n            area.coords = `${coords.x},${value},${coords.x + coords.width},${value + coords.height}`\n            break\n        case 'width':\n            area.coords = `${coords.x},${coords.y},${coords.x + value},${coords.y + coords.height}`\n            break\n        case 'height':\n            area.coords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + value}`\n            break\n        }\n        \n        this.drawSavedAreas()\n    },\n\n    // updateAreaCoords(areaId) {\n    //     const area = this.areas.find(a => a.id === areaId)\n    // const coords = this.getAreaCoords(area)\n    // const newCoords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + coords.height}`\n    \n    // // 영역 좌표 직접 업데이트\n    // area.coords = newCoords\n    \n    // // 캔버스 다시 그리기\n    // this.$nextTick(() => {\n    //   this.drawSavedAreas()\n    // })\n    // }\n  }\n}\n</script>\n\n<style scoped>\n.color-picker-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-top: 10px;\n  padding: 8px 12px;\n  background-color: #f0f8ff;\n  border-radius: 4px;\n  border-left: 4px solid #2196F3;\n}\n\n.color-picker-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n}\n\n.color-picker {\n  width: 40px;\n  height: 30px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 0;\n  background: none;\n}\n\n.color-apply-btn {\n  padding: 4px 12px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.color-apply-btn:hover {\n  background-color: #0b7dda;\n}\n\n.file-info {\n  display: inline-flex;\n  align-items: center;\n  padding: 8px 12px;\n  background: #E3F2FD;\n  border-radius: 4px;\n  color: #1976D2;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.25px;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.file-info .material-icons {\n  font-size: 16px;\n  margin-right: 8px;\n}\n\n.action-btn.visibility {\n  background-color: #2196F3;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.visibility:hover {\n  background-color: #0b7dda;\n}\n\n.action-btn.visibility .material-icons {\n  font-size: 18px;\n}\n\n.action-btn.delete {\n  background-color: #ff4444;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.delete:hover {\n  background-color: #cc0000;\n}\n\n.action-btn.delete .material-icons {\n  font-size: 18px;\n}\n\n.import-controls-container {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.controls-row {\n  display: flex;\n  /* justify-content: space-between; */\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 15px;\n}\n\n.import-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.image-path-input {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-grow: 1;\n}\n\n.path-input {\n  flex-grow: 1;\n  padding: 8px 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.path-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.draggable {\n  cursor: move;\n  pointer-events: all;\n}\n\n.area-background {\n  pointer-events: none;\n  z-index: 1;\n}\n\n.area-background.draggable {\n  pointer-events: all;\n}\n\n.area-background img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.page-container {\n  /* display: flex; */\n  gap: 20px;\n  /* align-items: flex-start; */\n}\n\n.image-section {\n  flex: 1;\n  min-width: 0; /* 이미지가 컨테이너를 벗어나지 않도록 */\n}\n\n.image-selector {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.file-input {\n  display: none;\n}\n\n.select-image-btn {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.select-image-btn:hover {\n  background-color: #45a049;\n}\n\n.image-container {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  \n  border-radius: 4px;\n  background: #fff;  \n  padding: 8px;\n}\n\n.image-display {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  max-height: 80vh; /* 뷰포트 높이의 80%로 최대 높이 제한 (선택사항) */\n  background-image: \n    url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20'%3E%3Crect width='10' height='10' fill='%23ccc'/%3E%3Crect x='10' y='10' width='10' height='10' fill='%23ccc'/%3E%3C/svg%3E\");\n}\n\n.image-map {\n  /* max-width: 100%;\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none; */\n  max-width: none; /* max-width: 100% 제거 */\n  width: auto; /* 원본 크기 유지 */\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.highlight-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n /* switch 스타일 */\n .switch {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  background-color: #ccc;\n  border-radius: 24px;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  border-radius: 50%;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(26px);\n}\n\n.switch-label {\n  margin-left: 10px;\n  font-size: 14px;\n  color: #333;\n}\n\n/* */\n\n.area-number {\n  position: absolute; \n  padding: 2px 6px;\n  /* border-radius: 0px; */\n  font-size: 12px;\n  font-weight: bold;\n  /* margin-top: 3px;\n  margin-left: 3px; */\n  z-index: 2;\n  background-color: white; /* 배경색을 흰색으로 설정 */\n  color: black; /* 글자색을 검정색으로 설정 */\n  mix-blend-mode: difference; /* 배경과 반대되는 색상으로 표시 */\n  transition: background-color 0.3s ease;\n}\n\n.area-number.selected {\n  background-color: rgba(76, 175, 80, 0.6); /* 선택된 영역 강조 색상 */\n  font-weight: bold;\n  mix-blend-mode: normal; /* 선택된 경우 일반 모드로 표시 */\n}\n\n/* Modern Table Styles */\n.area-table-container {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.modern-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin-top: 15px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n  font-size: 12px;\n}\n\n.modern-table thead th {\n  background-color: #d0d0d0;\n  color: #4a5568;\n  font-weight: 600;  \n  text-align: left;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 0.8em;\n  padding: 8px;\n  /* font-size: 12px; */\n}\n\n.modern-table tbody td {\n  padding: 8px;\n  border-bottom: 1px solid #e2e8f0;\n  vertical-align: middle;\n}\n\n.modern-table tbody tr:last-child td {\n  border-bottom: none;\n}\n\n.modern-table tbody tr:hover {\n  background-color: #eff0f1;\n}\n\n/* 각 컬럼 너비 조정 */\n.modern-table td:nth-child(1) { /* No. */\n  width: 20px;\n}\n\n.modern-table td:nth-child(2), /* X */\n.modern-table td:nth-child(3), /* Y */\n.modern-table td:nth-child(4), /* Width */\n.modern-table td:nth-child(5) { /* Height */\n  width: 50px;\n}\n\n.modern-table td:nth-child(6) { /* Image */\n  width: 200px;\n}\n\n.modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n.coordinate-input {\n  padding: 4px 8px;  \n  font-size: 12px;\n  margin: 0 4px;\n  width: calc(100% - 16px); /* 패딩과 마진을 고려한 너비 조정 */\n}\n\n/* .action-btn {\n  padding: 4px 8px;\n  font-size: 12px;  \n} */\n\n.editing-row {\n  background-color: #f0fff4 !important;\n}\n\n\n.coordinate-input::-webkit-outer-spin-button,\n.coordinate-input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.coordinate-input[type=number] {\n  -moz-appearance: textfield;\n}\n\n\n.coordinate-input:disabled {\n  background-color: #f5f5f5;\n  border-color: #e2e8f0;\n  cursor: not-allowed;\n  color: #4a5568;\n}\n\n.coordinate-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.area-id {\n  font-weight: 600;\n  font-size: 0.9em;\n  color: #2c3e50;\n  text-align: center;\n}\n\n.actions-cell {\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9em;\n  transition: all 0.2s;\n}\n\n.action-btn.edit {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.action-btn.edit:hover {\n  background-color: #45a049;\n}\n\n.image-upload {\n  min-width: 120px;\n}\n\n.area-thumbnail {\n  max-width: 50px;\n  max-height: 50px;\n  object-fit: cover;\n  margin-top: 5px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n/* 테이블 셀 너비 조정 */\n.modern-table td {\n  min-width: 80px;\n  padding: 8px 12px; /* 좌우 패딩 증가 */\n}\n\n/* export-buttons */\n.export-buttons {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.export-btn {\n  padding: 8px 16px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #1976D2;\n}\n\n.file-upload-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.selected-filename {\n  font-size: 12px;\n  color: #666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.custom-file-upload:hover {\n  background-color: #e9ecef;\n}\n\n.custom-file-upload .material-icons {\n  font-size: 18px;\n  color: #666;\n}\n\n.image-upload {\n  display: none;\n}\n\n.import-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.import-btn:hover {\n  background-color: #45a049;\n}\n\n.import-btn .material-icons {\n  font-size: 18px;\n}\n\n@media screen and (max-width: 768px) {\n  .modern-table thead {\n    display: none;\n  }\n\n  .modern-table tbody tr {\n    display: grid;\n    grid-template-columns: auto auto auto auto;\n    padding: 8px;\n    border-bottom: 1px solid #e2e8f0;\n  }\n\n  .modern-table tr:nth-child(even) {\n    background-color: #f8f9fa;\n  }\n\n  .modern-table td {\n    padding: 4px;\n    border: none;\n    text-align: center;\n  }\n\n  /* 첫째 줄: No, X, Y, Width, Height */\n  .modern-table td:nth-child(1),\n  .modern-table td:nth-child(2),\n  .modern-table td:nth-child(3),\n  .modern-table td:nth-child(4),\n  .modern-table td:nth-child(5) {\n    grid-row: 1;\n    width: 40px;\n  }\n\n  /* 둘째 줄: , Image, Actions */ \n  .modern-table td:nth-child(6) {\n    grid-row: 2;\n    grid-column: 2 / span 2;\n  }\n\n  .modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n  .modern-table td:last-child {\n    grid-row: 2;\n    grid-column: 4;\n    padding-right: 16px;\n  }\n\n  \n}\n</style>","import { render } from \"./ImageMap.vue?vue&type=template&id=7556cccb&scoped=true\"\nimport script from \"./ImageMap.vue?vue&type=script&lang=js\"\nexport * from \"./ImageMap.vue?vue&type=script&lang=js\"\n\nimport \"./ImageMap.vue?vue&type=style&index=0&id=7556cccb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7556cccb\"]])\n\nexport default __exports__","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n"],"names":["classof","$String","String","module","exports","argument","TypeError","class","key","name","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","accept","onChange","_cache","args","$options","importAreaInfo","_createTextVNode","$data","imagePath","_hoisted_6","webkitdirectory","directory","importImages","_createCommentVNode","_hoisted_7","_hoisted_8","handleImageUpload","ref","selectedImage","_hoisted_9","$event","isEditing","BGName","_hoisted_10","_toDisplayString","isNvpFile","_hoisted_11","nvpColor","reprocessNvpFile","onClick","_hoisted_12","_hoisted_13","_hoisted_14","src","useMap","onLoad","initializeCanvas","handleImageClick","onMousedown","_withModifiers","startDrawing","onMousemove","drawing","onMouseup","endDrawing","draggable","_hoisted_15","_hoisted_16","_Fragment","_renderList","areas","area","id","shape","coords","href","alt","onMouseover","highlightArea","onMouseout","removeHighlight","_hoisted_17","style","_normalizeStyle","getAreaBackgroundStyle","imageUrl","_hoisted_18","visible","handleCanvasClick","cursor","_normalizeClass","selectedAreaId","getAreaNumberStyle","length","_hoisted_19","_hoisted_20","_hoisted_21","placeholder","_hoisted_22","isEditingArea","_hoisted_23","getAreaCoords","x","onInput","updateCoord","target","value","_hoisted_24","number","y","_hoisted_25","width","disabled","title","_hoisted_26","height","_hoisted_27","_hoisted_28","handleAreaImageUpload","_hoisted_30","_hoisted_29","areaFilenames","_hoisted_31","_hoisted_32","toggleVisibility","_hoisted_34","_hoisted_33","deleteArea","_hoisted_35","_hoisted_36","exportAsJson","exportAsCStruct","data","isDrawing","startX","startY","currentArea","editingAreaId","isDragging","dragStartX","dragStartY","BGSize","nvpFileData","methods","areaId","this","find","a","drawSavedAreas","event","rect","getBoundingClientRect","scale","clientWidth","clientX","left","clientY","top","clickedArea","x1","y1","x2","y2","split","map","Number","selectArea","classList","contains","files","Array","from","imageMap","forEach","file","startsWith","reader","FileReader","onload","e","result","readAsDataURL","async","content","endsWith","importFromJson","importFromCStruct","readAsText","clearAllAreas","JSON","parse","areasData","isArray","Error","item","coordinates","undefined","console","error","filter","filename","$nextTick","$refs","highlightCanvas","alert","message","imagePathMatch","match","BGNameMatch","areaRegex","exec","parseInt","push","log","exportData","blob","Blob","stringify","downloadFile","structContent","link","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","position","overflow","triggerFileInput","fileInput","formatFileSize","bytes","units","size","unitIndex","toFixed","handleNvpFile","$emit","buffer","processNvpData","readAsArrayBuffer","dataView","DataView","getUint16","canvas","ctx","getContext","clearRect","imageData","createImageData","colorHex","replace","r","substring","g","b","i","dataIndex","fileIndex","byteLength","alphaValue","Uint8Array","putImageData","toDataURL","toggleEditMode","num","Math","round","strokeStyle","lineWidth","setLineDash","strokeRect","naturalWidth","currentX","currentY","fillStyle","fillRect","img","Image","endX","endY","abs","newArea","min","toggleEdit","isNaN","__exports__","render","$TypeError","passed","required","defineBuiltIn","uncurryThis","toString","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","append","$delete","params","arguments","$value","entries","v","k","entry","index","dindex","found","entriesLength","enumerable","unsafe","getAll","$has","has","values","DESCRIPTORS","defineBuiltInAccessor","get","count","configurable"],"sourceRoot":""}